<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ABegin</name>
    </assembly>
    <members>
        <member name="T:ABegin.AHC_PrintInterFace">
            <summary>
            打印框架通用类
            </summary>
        </member>
        <member name="T:ABegin.MessageBoxForm">
            <summary>
            系统提示框封装类，用的Form进行替换实现
            </summary>
        </member>
        <member name="F:ABegin.MessageBoxForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.MessageBoxForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.MessageBoxForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ABegin.Fun.fsAssemblyVersion">
            <summary>
            程序集版本
            </summary>
        </member>
        <member name="F:ABegin.Fun.fsAssemblyVersion_Cloud">
            <summary>
            程序集版本-云疗版
            </summary>
        </member>
        <member name="F:ABegin.Fun.fsAssemblyVersion_flagship">
            <summary>
            程序集版本-标准版
            </summary>
        </member>
        <member name="M:ABegin.Fun.MsgBox(System.String,System.Windows.Forms.MessageBoxIcon,System.Int32)">
            <summary>
            提示一段文字信息，只有“确定”按钮
            </summary>
            <param name="vsText">提示内容</param>
            <param name="veIcon">左边的图标类型，默认为警告</param>
            <param name="viWaitTime">自动关闭时间，单位秒  0:手工关闭</param> 
        </member>
        <member name="M:ABegin.Fun.MsgError(System.String,System.String,System.Windows.Forms.MessageBoxIcon,System.Boolean)">
            <summary>
            提示一个警告/错误的异常信息，是否将屏幕保存到ABegin同目录的SaveScreens目录中
            </summary>
            <param name="vsText">提示内容</param>
            <param name="vsTitle">提示标题</param>
            <param name="vbSaveScreen">是否保存当前屏幕信息到本地</param>
        </member>
        <member name="M:ABegin.Fun.MsgBoxYN(System.String,System.Boolean)">
            <summary>
            询问一个“是”与“否”的选择
            </summary>
            <param name="vsText">提示内容</param>
            <param name="vbDefYes">默认“是”还是“否”</param>
            <returns>true:是;false:否</returns>
        </member>
        <member name="M:ABegin.Fun.MsgBoxSC(System.String,System.Boolean)">
            <summary>
            询问一个“确定”与“取消”的选择
            </summary>
            <param name="vsText">提示内容</param>
            <param name="vbDefSure">默认“确定”还是“取消”</param>
            <returns>true:确定;false:取消</returns>
        </member>
        <member name="M:ABegin.Fun.MsgBoxYNC(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            询问一个“是/否/取消”的选择 可自定义提示内容
            </summary>
            <param name="vsText">提示文本值</param>
            <param name="vsText1">按钮1名称</param>
            <param name="vsText2">按钮2名称</param>
            <param name="vsText3">按钮3名称</param>
            <param name="viDefButton">默认按钮索引,从1开始</param>
            <returns>1:是,2:否,3:取消</returns>
        </member>
        <member name="M:ABegin.Fun.MsgBoxYNC(System.String,System.Int32)">
            <summary>
            询问一个“是/否/取消”的选择
            </summary>
            <param name="vsText">询问的提示的文本</param>
            <param name="vbDefButton">默认按钮  1:是  2:否  3:取消</param>
            <returns>1:是,2:否,3:取消</returns>
        </member>
        <member name="M:ABegin.Fun._PlayText(System.Object)">
            <summary>
            根据阅读对象内容阅读信息,平台内部调用
            </summary>
            <param name="tVar">阅读对象:TPalyTextVar</param>
        </member>
        <member name="M:ABegin.Fun.PlayText(System.String,System.Int32,System.Boolean)">
            <summary>
            利用微软语音库阅读文本
            </summary>
            <param name="vsText">待阅读的文本</param>
            <param name="viRate">速率</param>
            <param name="vbWait">是否等待播放结束才返回</param>
        </member>
        <member name="M:ABegin.Fun.CMToPixel(System.Single)">
            <summary>
            将厘米转换成像素单位，主要用于绘图（包括打印）
            </summary>
            <param name="vfValue">以厘米为单位的值</param>
            <returns>以像素为单位的值</returns>
        </member>
        <member name="M:ABegin.Fun.PixelToCM(System.Int32)">
            <summary>
            将像素转换为厘米
            </summary>
            <param name="viValue">需要转换的像素</param>
            <returns>以厘米为单位的值</returns>
        </member>
        <member name="M:ABegin.Fun.ToWbCode(System.String)">
            <summary>
            根据字符串参数获取五笔简码：函数已经取消
            </summary>
            <param name="vsStrList">需要获取五笔简码的字符串</param>
            <returns>五笔简码</returns>
        </member>
        <member name="M:ABegin.Fun.ToPyCode(System.String)">
            <summary>
            根据字符串参数获取拼音简码
            </summary>
            <param name="vsStrList">需要获取拼音简码的字符串</param>
            <returns>拼音简码</returns>
        </member>
        <member name="M:ABegin.Fun.ToRMB(System.Decimal)">
            <summary>
            将一个数值转化成人民币大写形式
            </summary>
            <param name="vnValue">需要转换的数值</param>
            <returns>转换后的人民币大写形式</returns>
        </member>
        <member name="M:ABegin.Fun.ToSolarDate(System.DateTime)">
            <summary>
            农历转阴历
            </summary>
            <param name="LunarDate">需要转换为农历的时间</param>
            <returns>转换后的阴历时间</returns>
        </member>
        <member name="M:ABegin.Fun.ToLunarDate(System.DateTime)">
            <summary>
            阳历转农历
            </summary>
            <param name="vSolarDate">需要转换为阴历的时间</param>
            <returns>转换后的农历时间</returns>
        </member>
        <member name="M:ABegin.Fun.StrToDate(System.String,System.String)">
            <summary>
            字符串转换为时间格式
            </summary>
            <param name="vsDate">要转换的字符串</param>
            <param name="vsFormat">要转换的目标格式</param>
            <returns>返回转换后的时间格式,失败返回当前时间</returns>
        </member>
        <member name="M:ABegin.Fun.ToString(System.String)">
            <summary>
            将金额模式的数据转换为字符串保存,转换失败返回原有字符串
            </summary>
            <param name="vsMoney">要转换的金额数据</param>
            <returns>转换后的字符串</returns>
        </member>
        <member name="M:ABegin.Fun.ToMoney(System.String,System.Int32,System.Boolean)">
            <summary>
            将字符串数字转换为金额模式
            </summary>
            <param name="vsString">要转换的字符串</param>
            <param name="viLength">有效小数位数</param>
             <param name="fbNull">0是否显示为空</param>
            <returns>转换后的金额数据</returns>
        </member>
        <member name="M:ABegin.Fun._toMoney(System.String,System.Int32)">
            <summary>
            转换为金额模式:平台内部调用
            </summary>
            <param name="vsString">要转换的字符串</param>
            <param name="viLength">小数有效位数</param>
            <returns>对应的金额格式</returns>
        </member>
        <member name="M:ABegin.Fun.StrToLong(System.String)">
            <summary>
            字符串转换为Long,转换失败返回0
            </summary>
            <param name="vsText">要转换的字符串信息</param>
            <returns>转换后的Long值</returns>
        </member>
        <member name="M:ABegin.Fun.StrToShort(System.String)">
            <summary>
            字符串转换为Short,转换失败返回0
            </summary>
            <param name="vsText">要转换的字符串信息</param>
            <returns>转换后的Short值</returns>
        </member>
        <member name="M:ABegin.Fun.StrToInt(System.String)">
            <summary>
            字符串转换为Int,转换失败返回0
            </summary>
            <param name="vsText">要转换的字符串信息</param>
            <returns>转换后的Int值</returns>
        </member>
        <member name="M:ABegin.Fun.StrToFloat(System.String)">
            <summary>
            字符串转换为Float,转换失败返回0
            </summary>
            <param name="vsText">要转换的字符串信息</param>
            <returns>转换后的Float值</returns>
        </member>
        <member name="M:ABegin.Fun.StrToDouble(System.String)">
            <summary>
            字符串转换为Double,转换失败后返回0
            </summary>
            <param name="vsText">要转换的字符串信息</param>
            <returns>转换后的Double值</returns>
        </member>
        <member name="M:ABegin.Fun.StrToDeci(System.String)">
            <summary>
            字符串转换为Decimal,转换失败返回0
            </summary>
            <param name="vsText">要转换的字符串信息</param>
            <returns>转换后的Decimal值</returns>
        </member>
        <member name="M:ABegin.Fun.StrToRtf(System.String)">
            <summary>
            将Rtf格式转换为字符串
            </summary>
            <param name="vsRtf">RTF格式字符串</param>
            <returns>转换后的字符串</returns>
        </member>
        <member name="M:ABegin.Fun.CreateDBXml(System.String,System.Int32,System.Collections.Generic.List{ABegin.DBXmlColumn},System.String,System.String,System.Boolean)">
            <summary>
            内部使用
            </summary>
            <param name="vsTableName"></param>
            <param name="viNonQuery"></param>
            <param name="listColumns"></param>
            <param name="vsId"></param>
            <param name="vsNo"></param>
            <param name="vbSaveID"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.ResToDataTable(ANetAccess.ARecordset)">
            <summary>
            将Res数据集对象转换为DataTable使用
            </summary>
            <param name="res">要转换的数据集对象,不可进行MoveNext之后再转换</param>
            <returns>转换后的DataTable</returns>
        </member>
        <member name="M:ABegin.Fun.CalculateAge(System.DateTime)">
            <summary>
            将日期转换为年月日
            </summary>
            <param name="dateTime">要转换的日期</param>
            <returns>年龄信息</returns>
        </member>
        <member name="M:ABegin.Fun.GridToRes(ACtrllist.AGridList)">
            <summary>
            将AGridList表格转换为ARecordset对象
            </summary>
            <param name="grid">要转换的表格</param>
            <returns>转换后的数据集</returns>
        </member>
        <member name="M:ABegin.Fun.ResToGrid(ANetAccess.ARecordset,ACtrllist.AGridList)">
            <summary>
            ARecordset转换为AGirdList对象
            </summary>
            <param name="res"></param>
            <param name="grid"></param>
        </member>
        <member name="M:ABegin.Fun.GetBytes(System.String,System.Int32)">
            <summary>
            字符串转换为Byte数组,对字符串进行了位数补全,用于Socket通信传输
            </summary>
            <param name="date">要转换的文本</param>
            <param name="length">单次传输字符长度</param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.Base64ToImage(System.String)">
            <summary>
            Base64字符串转换为图片
            </summary>
            <param name="base64"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.ImageToBase64(System.Drawing.Image)">
            <summary>
            image图像转换成base64字符串
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.Base64ToBitMap(System.String)">
            <summary>
             Base64字符串转换为图片-BitMap格式
            </summary>
            <param name="base64BitMap"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.BitMapToBase64(System.Drawing.Bitmap)">
            <summary>
            image图像转换成base64字符串-BitMap格式
            </summary>
            <param name="bitMap">bitmap图像</param>
            <returns></returns>
        </member>
        <member name="F:ABegin.Fun.fsOrgNameExtend">
            <summary>
            系统扩展名称
            </summary>
        </member>
        <member name="F:ABegin.Fun.paraList">
            <summary>
            参数列表
            </summary>
        </member>
        <member name="F:ABegin.Fun.perList">
            <summary>
            自定义权限列表
            </summary>
        </member>
        <member name="F:ABegin.Fun.TableList">
            <summary>
            表格列表
            </summary>
        </member>
        <member name="F:ABegin.Fun.AdvSerchList">
            <summary>
            高级查询应用列表
            </summary>
        </member>
        <member name="F:ABegin.Fun.rememberList">
            <summary>
            记忆列表
            </summary>
        </member>
        <member name="M:ABegin.Fun.GetHospitalName">
            <summary>
            获取医院当前注册的名称
            </summary>
            <returns>注册的医院名称</returns>
        </member>
        <member name="M:ABegin.Fun.isLogin">
            <summary>
            当前系统是否已经登陆初始化
            </summary>
            <returns>true:已经登陆;false:未登陆</returns>
        </member>
        <member name="M:ABegin.Fun.IsDebugMode">
            <summary>
            返回调试状态:返回_bIsDebug的值，用于判断是否处于调试模式
            </summary>
            <returns>true:调试模式;false:非调试模式</returns>
        </member>
        <member name="M:ABegin.Fun.IsRegionAdmin">
            <summary>
            当前登陆人员是否是区域管理员
            </summary>
            <returns>true:区域管理员;false:非区域管理员</returns>
        </member>
        <member name="M:ABegin.Fun.GetMenuTag">
            <summary>
            获取当前系统主菜单的Tag信息:平台内部使用
            </summary>
            <returns>当前菜单的Tag信息</returns>
        </member>
        <member name="M:ABegin.Fun.MenuIsManage">
            <summary>
            当前菜单是否是内核管理AManage菜单:平台内部使用
            </summary>
            <returns>true:是;false:否</returns>
        </member>
        <member name="M:ABegin.Fun.IsHosAdmin">
            <summary>
            当前登陆人员是否是医院管理员
            </summary>
            <returns>true:是;false:否</returns>
        </member>
        <member name="M:ABegin.Fun.GetContents">
            <summary>
            获取当前菜单的目录信息,用于状态显示:平台内部使用
            </summary>
            <returns>菜单目录描述信息</returns>
        </member>
        <member name="M:ABegin.Fun.HavePer(System.String)">
            <summary>
            判断是否有权限,系统管理员不限制权限
            </summary>
            <param name="vsPerCode">权限编码</param>
            <returns>true:有权限;false:无权限</returns>
        </member>
        <member name="M:ABegin.Fun.HavePer_Custom(System.String)">
            <summary>
            判断是否具有自定义权限
            </summary>
            <param name="vsPerCode"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.IsAdmin">
            <summary>
            判断当前操作员是否为系统管理员
            </summary>
            <returns>1:是  0:非</returns>
        </member>
        <member name="M:ABegin.Fun.IsSuperAdmin">
            <summary>
            判断当前操作员是否为内置区域管理员
            </summary>
            <returns>true:是;false:否</returns>
        </member>
        <member name="M:ABegin.Fun.IsAdmin(System.Int32)">
            <summary>
            判断指定操作员是否是医院管理员
            </summary>
            <param name="viUserId">用户ID</param>
            <returns>1:是 0:否</returns>
        </member>
        <member name="M:ABegin.Fun._GetAHCVersion">
            <summary>
            以字符串的方式获取平台版本号
            </summary>
            <returns>版本信息</returns>
        </member>
        <member name="M:ABegin.Fun.GetOrgId">
            <summary>
            获取当前登录的机构ID
            </summary>
            <returns>当前登录机构ID</returns>
        </member>
        <member name="M:ABegin.Fun.GetOrgExtendName">
            <summary>
            暂未使用
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.SetOrgExtendName(System.String)">
            <summary>
            暂未使用
            </summary>
            <param name="vsName"></param>
        </member>
        <member name="M:ABegin.Fun.SetSystemIni(System.String,System.String)">
            <summary>
            设置本地缓存配置信息,使用键值模式,对应配置文件:System.ini
            </summary>
            <param name="vsKey">要配置的Key</param>
            <param name="vsValue">要配置的Value</param>
        </member>
        <member name="M:ABegin.Fun.GetSystemIni(System.String,System.String)">
            <summary>
            获取本地系统缓存配置信息,对应配置文件:System.ini
            </summary>
            <param name="vsKey">配置Key</param>
            <returns>配置value</returns>
        </member>
        <member name="M:ABegin.Fun.GetUserId">
            <summary>
            获取当前登录用户系统序号
            </summary>
            <returns>用户ID</returns>
        </member>
        <member name="M:ABegin.Fun.GetUserCode">
            <summary>
            获取当前登录用户编号
            </summary>
            <returns>用户编码</returns>
        </member>
        <member name="M:ABegin.Fun.GetUserName">
            <summary>
            获取当前登录用户姓名
            </summary>
            <returns>用户姓名</returns>
        </member>
        <member name="M:ABegin.Fun.GetOrgaName">
            <summary>
            获取当前登录机构名称
            </summary>
            <returns>当前机构名称</returns>
        </member>
        <member name="M:ABegin.Fun.GetOrgaNameExtend">
            <summary>
            获取当前登录机构扩展名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.GetDepartId">
            <summary>
            获取当前操作员当前登录科室ID
            </summary>
            <returns>当前登录科室ID</returns>
        </member>
        <member name="M:ABegin.Fun.GetDepartName">
            <summary>
            获取当前操作员当前登录科室名称
            </summary>
            <returns>当前登录科室名称</returns>
        </member>
        <member name="M:ABegin.Fun.GetServerTime">
            <summary>
            获取服务器时间
            </summary>
            <returns>字符串格式服务器时间</returns>
        </member>
        <member name="M:ABegin.Fun.GetClientId">
            <summary>
            获取当前终端ID
            </summary>
            <returns>当前终端的注册ID</returns>
        </member>
        <member name="M:ABegin.Fun.GetClientName">
            <summary>
            获取当前终端名称
            </summary>
            <returns>当前终端的名称</returns>
        </member>
        <member name="M:ABegin.Fun.LoadMenuPer(System.String)">
            <summary>
            加载权限信息,可指定权限xml：平台内部使用
            </summary>
            <param name="sMenuPer">指定权限xml</param>
        </member>
        <member name="M:ABegin.Fun.GetPerInfo(System.String)">
            <summary>
            获取自定义权限信息
            </summary>
            <param name="vsPerCode"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.LoadCmd_Custom(ANetAccess.ARecordset)">
             <summary>
            初始化加载系统快捷功能按键
             </summary>
             <param name="res"></param>
        </member>
        <member name="M:ABegin.Fun.SetCustomCmd_Cmd(System.String,System.String,System.String,System.String)">
            <summary>
            设置自定义快捷功能 平台内部使用
            </summary>
            <param name="vsMenuNo">菜单编号</param>
            <param name="vsCmdNo">功能编号</param>
            <param name="vsUser">使用范围,1全局,2个人</param>
            <param name="vsCmdKey">快捷按键</param>
        </member>
        <member name="M:ABegin.Fun.GetCustomCmd_Cmd(System.String,System.String)">
            <summary>
            获取自定义快捷功能 平台内部使用
            </summary>
            <param name="vsMenuNo">菜单编号</param>
            <param name="vsCmdNo">功能编号</param>
        </member>
        <member name="M:ABegin.Fun.GetCustomCmd_Menu(System.String)">
            <summary>
            获取系统快捷菜单功能按键，通过菜单编码. 平台内部使用
            </summary>
            <param name="vsMenuNo">菜单编码</param>
            <returns>快捷功能信息</returns>
        </member>
        <member name="M:ABegin.Fun.GetCustomCmds(System.String)">
            <summary>
            通过菜单编码获取菜单所注册的快捷菜单信息
            </summary>
            <param name="vsMenuNo">菜单编码</param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.VerifyKeysCmd(System.String,System.String,System.Windows.Forms.Keys)">
            <summary>
            验证是否执行自定义快捷功能
            </summary>
            <param name="vsMenusNo">菜单编号</param>
            <param name="vsCmdNo">功能编号</param>
            <param name="key">当前键盘按键</param>
            <returns>是否验证通过</returns>
        </member>
        <member name="M:ABegin.Fun.LoadPer_Custom(ANetAccess.ARecordset)">
            <summary>
            加载自定义权限，内部使用
            </summary>
            <param name="res"></param>
        </member>
        <member name="M:ABegin.Fun.LoadPara(ANetAccess.ARecordset)">
            <summary>
            加载系统配置参数信息，加载顺序：区域、机构、终端、人员,依次覆盖
            </summary>
        </member>
        <member name="M:ABegin.Fun.GetParaVal(System.String,System.String,System.String)">
            <summary>
            获取系统参数配置
            </summary>
            <param name="vs组件编码">组件编码</param>
            <param name="vs参数分类号">参数分类号</param>
            <param name="vs参数编号">参数编号</param>
            <returns>当前参数内容</returns>
        </member>
        <member name="M:ABegin.Fun.GetParaInfo(System.String,System.String,System.String)">
            <summary>
            获取参数信息 平台内部使用
            </summary>
            <param name="vs组件编码"></param>
            <param name="vs参数分类号"></param>
            <param name="vs参数编号"></param>
            <returns>参数信息,包括参数标题等</returns>
        </member>
        <member name="M:ABegin.Fun.LoadADVSerchFormat">
            <summary>
            加载高级查询配置信息:平台内部调用
            </summary>
        </member>
        <member name="M:ABegin.Fun.SetAdvSerchFormat(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            保存高级查询配置信息,缓存于本地目录,平台内部使用
            </summary>
            <param name="vs组件编码">组件编码</param>
            <param name="vsAHC子编码">AHC子编码</param>
            <param name="vs适用对象">适用对象</param>
            <param name="vs对象序号">对象序号</param>
            <param name="vs明细内容">明细内容</param>
        </member>
        <member name="M:ABegin.Fun.RemoveAdvSerchFormat(System.String,System.String)">
            <summary>
            移除本地缓存的高级查询配置信息,平台内部使用
            </summary>
            <param name="vs组件编码">组件编码</param>
            <param name="vsAHC子编码">AHC子编码</param>
        </member>
        <member name="M:ABegin.Fun.GetAdvSerchFormat(System.String,System.String)">
            <summary>
            获取本地缓存的高级查询配置信息
            </summary>
            <param name="vs组件编码">组件编码</param>
            <param name="vsAHC子编码">AHC子编码</param>
            <returns>高级查询配置信息数组,数组依次存储:适用对象、对象序号、明细内容、用户ID</returns>
        </member>
        <member name="M:ABegin.Fun.LoadTablesFormat">
            <summary>
            加载系统所有表格格式,平台内部使用
            </summary>
        </member>
        <member name="M:ABegin.Fun.SetTablesFormat(System.String,System.String,System.String,System.Boolean)">
            <summary>
            设置保存表格XML格式，用于下次获取的时候获取，平台内部调用
            </summary>
            <param name="vs组件编码">组件编码</param>
            <param name="vsAHC子编码">表格子编码</param>
            <param name="vs格式内容">表内容</param>
            <param name="falgNew">是否是超过4000个长度</param>
        </member>
        <member name="M:ABegin.Fun.RemoveFormat(System.String,System.String)">
            <summary>
            移除表格格式 平台内部使用
            </summary>
            <param name="vs组件编码"></param>
            <param name="vsAHC子编码"></param>
        </member>
        <member name="M:ABegin.Fun.GetTableFormat(System.String,System.String)">
            <summary>
            获取表格格式
            </summary>
            <param name="vs组件编码">组件编码</param>
            <param name="vsAHC子编码">AHC子编码</param>
            <returns>表格格式XML,取数组第一个数据</returns>
        </member>
        <member name="M:ABegin.Fun.GetParaVal(System.String,System.Int32,System.Int32)">
            <summary>
            获取参数值
            </summary>
            <param name="vs组件编码">组件编码</param>
            <param name="vs参数分类号">参数分类号</param>
            <param name="vs参数编号">参数编号</param>
            <returns>系统配置参数信息</returns>
        </member>
        <member name="M:ABegin.Fun.LoadInputRemembers(ANetAccess.ARecordset)">
            <summary>
            加载窗口输入法信息 平台内部使用
            </summary>
            <param name="res"></param>
        </member>
        <member name="M:ABegin.Fun.LoadFormInterFace(ANetAccess.ARecordset)">
            <summary>
            加载窗口插件 内部使用
            </summary>
            <param name="res"></param>
        </member>
        <member name="M:ABegin.Fun.LoadRemembers(ANetAccess.ARecordset)">
            <summary>
            加载系统记忆信息
            </summary>
        </member>
        <member name="M:ABegin.Fun.RemoveRemember(System.String,System.String,System.String,System.String)">
            <summary>
            异常记忆内容(只移除缓存)
            </summary>
            <param name="vs组件编码i"></param>
            <param name="vsAHC编码"></param>
            <param name="vs使用对象类型"></param>
            <param name="vs使用对象序号"></param>
        </member>
        <member name="M:ABegin.Fun.SetRemember(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            保存记忆信息,可用于用户操作习惯的保存
            </summary>
            <param name="vs组件编码i">组件编码</param>
            <param name="vsAHC编码">AHC编码</param>
            <param name="vs使用对象类型">使用对象类型</param>
            <param name="vs使用对象序号">使用对象序号</param>
            <param name="vs记忆内容">记忆内容</param>
        </member>
        <member name="M:ABegin.Fun.GetRemember(System.String,System.String,System.String,System.String)">
            <summary>
            获取记忆信息,还原用户操作习惯配置信息
            </summary>
            <param name="vs组件编码i">组件编码</param>
            <param name="vsAHC编码">AHC编码</param>
            <param name="vs使用对象类型">使用对象类型</param>
            <param name="vs使用对象序号">使用对象序号</param>
            <returns>记忆信息</returns>
        </member>
        <member name="M:ABegin.Fun.GetSysVarList">
            <summary>
            获取AHC当前版本支持的系统变量,用,隔开,多用于平台内部使用
            </summary>
            <returns>系统变量字符串</returns>
        </member>
        <member name="M:ABegin.Fun.GetVisButtons">
            <summary>
            获取系统管理员非调试模式下,可使用的按钮集合
            </summary>
            <returns>可使用按钮集合</returns>
        </member>
        <member name="M:ABegin.Fun.GetSysVarValue(System.String)">
            <summary>
            根据vsVarName获取系统变量值，特别用于自定义打印格式及报表中
            </summary>
            <param name="vsVarName">变量名称</param>
            <returns>系统变量值</returns>
        </member>
        <member name="M:ABegin.Fun.GetDocumentNum(System.String,System.String,System.String)">
            <summary>
            根据业务类型、组件编码、AHC编码、编号格式获取单据编号,默认生成条件为当前机构;调用完成后需要调用UpdateDocumentNom更新单据编号
            </summary>
            <param name="vs业务类型">业务类型：AMS_B单据类型 名称</param>
            <param name="vs组件编码">当前组件的唯一编码</param>
            <param name="vsAHC编码">当前组件的AHC子编码</param>
            <returns>单据编号</returns>
        </member>
        <member name="M:ABegin.Fun.GetDocumentNum(System.String,System.String,System.String,System.String)">
            <summary>
            根据业务类型、组件编码、AHC编码、编号格式获取单据编号,生成条件为指定机构;调用完成后需要调用UpdateDocumentNom更新单据编号
            </summary>
            <param name="vs业务类型">业务类型：AMS_B单据类型 名称</param>
            <param name="vs组件编码">当前组件的唯一编码</param>
            <param name="vsAHC编码">当前组件的AHC子编码</param>
            <param name="vs隶属机构">指定生成机构</param>
            <returns>单据编号</returns>
        </member>
        <member name="M:ABegin.Fun.UpdateDocumentNom(System.String,System.String)">
            <summary>
            更新业务单据号，在获取业务单据保存后一定要调用
            </summary>
            <param name="vs业务类型">要更新的业务单据类型</param>
            <param name="vsAHC子编码">要更新的AHC子编码</param>
        </member>
        <member name="M:ABegin.Fun.UpdateDocumentNom(System.String)">
            <summary>
            更新业务单据号，在获取业务单据保存后一定要调用
            </summary>
            <param name="vs业务类型">要更新的业务单据类型</param>
        </member>
        <member name="M:ABegin.Fun.SetPrintByLastData(System.Boolean)">
            <summary>
            是否使用上次的打印格式,true：是，false：否,使用过后请注意还原 
            </summary>
            <param name="vbTrueOrFalse">true：是，false：否</param>
        </member>
        <member name="M:ABegin.Fun.SetPrintClss(ABegin.PrintClass)">
            <summary>
            设置当前打印信息 用于下一次打印获取 主要是平台使用
            </summary>
            <param name="vsXml"></param>
        </member>
        <member name="M:ABegin.Fun.GetPrintClass">
            <summary>
            获取设置的打印缓存信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.GetInputLanage(System.String)">
            <summary>
            获取输入法记忆信息 平台内部使用
            </summary>
            <param name="vsName"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.SetInputLanage(System.String,System.String,ABegin.InputLanageClass)">
            <summary>
            设置输入法记忆信息 平台内部使用
            </summary>
            <param name="vsUserID"></param>
            <param name="vsName"></param>
            <param name="inputClass"></param>
        </member>
        <member name="M:ABegin.Fun.SetStaticData(System.String,System.String)">
            <summary>
            设置静态数据
            </summary>
            <param name="vsKey">静态数据KEY</param>
            <param name="vsValue">静态数据值</param>
        </member>
        <member name="M:ABegin.Fun.GetStaticData(System.String)">
            <summary>
            获取设置的静态数据
            </summary>
            <param name="vsKey">静态数据KEY</param>
            <returns>静态数据值,KEY未找到的情况下返回空</returns>
        </member>
        <member name="M:ABegin.Fun.SetFormText(System.String)">
            <summary>
            设置当前要打开的窗口名称 平台内部使用，用于缓存
            </summary>
            <param name="vsText"></param>
        </member>
        <member name="M:ABegin.Fun.GetFormText">
            <summary>
            获取当前要打开的窗口名称 平台内部使用
            </summary>
            <returns></returns>
        </member>
        <member name="F:ABegin.Fun._ips">
            <summary>
            缓存IP,只取一次
            </summary>
        </member>
        <member name="M:ABegin.Fun.GetIP">
            <summary>
            获取本机IP地址
            </summary>
            <returns>IP地址</returns>
        </member>
        <member name="M:ABegin.Fun.LoadPerByUser(System.String)">
            <summary>
            加载用户相关数据 平台内部使用
            </summary>
            <param name="vsJGID"></param>
        </member>
        <member name="M:ABegin.Fun.GetGridFields(ACtrllist.AGridList)">
            <summary>
            获取表格的所有列信息
            </summary>
            <param name="gridList"></param>
            <returns>使用,分割</returns>
        </member>
        <member name="M:ABegin.Fun.VerifyIDCard(System.String)">
            <summary>
            验证是否是合法的身份证号码
            </summary>
            <param name="vsIDCard"></param>
            <returns>true：合法，false：不合法</returns>
        </member>
        <member name="M:ABegin.Fun.VerifyUserPwd(System.String,System.Int64)">
            <summary>
            
            </summary>
            <param name="vsPwd"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.CheckIDCard(System.String)">
            <summary>
            验证身份证ID
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.GetPlatVersion">
            <summary>
            获取平台版本号
            </summary>
        </member>
        <member name="M:ABegin.Fun.GetSubVersion(System.String)">
            <summary>
            获取组件子版本号
            </summary>
            <param name="vsSubName"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.GetUsersByDepart(System.String)">
            <summary>
            通过科室ID获取下属所有员工
            </summary>
            <param name="departId">科室编号</param>
            <returns>员工序号</returns>
        </member>
        <member name="M:ABegin.Fun.GetCurrentForm">
            <summary>
            获取当前活动的窗口
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.GetSystemModel">
            <summary>
            获取系统部署类型，是区域还是单医院
            </summary>
            <returns>1：区域，2：单医院</returns>
        </member>
        <member name="M:ABegin.Fun.CheckIDCard18(System.String)">
            <summary>
            验证15位身份证号
            </summary>
            <param name="Id">身份证号</param>
            <returns>验证成功为True，否则为False</returns>
        </member>
        <member name="M:ABegin.Fun.CheckIDCard15(System.String)">
            <summary>
            验证18位身份证号
            </summary>
            <param name="Id">身份证号</param>
            <returns>验证成功为True，否则为False</returns>
        </member>
        <member name="M:ABegin.Fun.GetSystemType">
            <summary>
            获取系统注册模式,云疗版,标准版，手麻版，医疗云平台
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.GetMealType">
            <summary>
            获取标准版套餐类型：A，B，C版
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.IsPrivateHos">
            <summary>
            是否民营医院
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.IsChengDuHos">
            <summary>
            是否成都地区医院
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.GetMenuClass(System.String)">
            <summary>
            获取指定授权菜单信息，未授权返回null
            </summary>
            <param name="vs菜单编码">要获取的菜单信息</param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.CAEnable">
            <summary>
            是否启用CA
            </summary>
            <returns>当前是否启用CA</returns>
        </member>
        <member name="M:ABegin.Fun.GetCAType">
            <summary>
            获取CA类型
            </summary>
            <returns>目前支持BJCA</returns>
        </member>
        <member name="M:ABegin.Fun.CABind">
            <summary>
            获取证书绑定信息
            </summary>
            <returns>绑定信息,返回null表示取消绑定</returns>
        </member>
        <member name="M:ABegin.Fun.CAAuth(System.String)">
            <summary>
            用户CA认证
            </summary>
            <param name="vlUserId">用户序号</param>
            <returns>验证信息</returns>
        </member>
        <member name="M:ABegin.Fun.GetALoginUser">
            <summary>
            获取登录人员相关信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.GetALoginDepart">
            <summary>
            获取当前登录科室相关信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.SaveScreen(System.String)">
            <summary>
            将当前屏幕保存到指定成指定文件，如果目录不存在，则自动建立
            </summary>
            <param name="vsDestFileName">要保存的文件路径</param>
            <returns>空:保存成功; 非空:失败原因</returns>
        </member>
        <member name="M:ABegin.Fun.DrawImage(System.Drawing.Graphics,System.String,System.Drawing.RectangleF,ABegin.EDrawImageMode)">
            <summary>
            在指定的Graphics上绘制图片
            </summary>
            <param name="gp">画板对象</param>
            <param name="vsFileName">待绘的文件名称</param>
            <param name="veMode">绘图模式</param>
            <returns>true:成功; false:失败</returns>
        </member>
        <member name="M:ABegin.Fun.DrawImage(System.Drawing.Graphics,System.String,System.Single,System.Single,System.Single,System.Single,ABegin.EDrawImageMode)">
            <summary>
            在指定Graphics上绘制图片
            </summary>
            <param name="gp">绘制对象</param>
            <param name="vsFileName">图片路径</param>
            <param name="viLeft">左边距</param>
            <param name="viTop">右边距</param>
            <param name="viWidth">宽度</param>
            <param name="viHeight">高度</param>
            <param name="veMode">绘制模型</param>
            <returns>true:成功;false:失败</returns>
        </member>
        <member name="M:ABegin.Fun.Draw2DCode(System.Drawing.Graphics,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            在指定位置绘制二维码
            </summary>
            <param name="gp">待绘图的对象</param>
            <param name="vsText">文本内容</param>
            <param name="viLeft"></param>
            <param name="viTop"></param>
            <param name="viWidth"></param>
            <param name="viHeight"></param>
            <returns></returns>
        </member>
        <member name="F:ABegin.Fun.fbPrintBylast">
            <summary>
            临时变量：是否最后一次打印
            </summary>
        </member>
        <member name="F:ABegin.Fun.fbPadingUser">
            <summary>
            临时变量：是否自定义分页
            </summary>
        </member>
        <member name="F:ABegin.Fun.fbDialog">
            <summary>
            临时变量：是否模态窗口打开
            </summary>
        </member>
        <member name="F:ABegin.Fun.list外键">
            <summary>
            临时变量，存储外键
            </summary>
        </member>
        <member name="F:ABegin.Fun.list透视">
            <summary>
            临时变量，存储枚举列
            </summary>
        </member>
        <member name="M:ABegin.Fun.CallDLLFun(System.String,System.String,System.String@)">
            <summary>
            调用一个按AHC规范建立的DLL中的函数
            </summary>
            <param name="vsComName">DLL文件名称，如：  Zxxx.dll</param>
            <param name="vsFunCmd">函数名称（类名.函数名称）,如：InterFace._Login</param>
            <param name="vsVarsList">入口参数,若有多个，则有|分开,同时为里面值为返回值</param>
            <returns>非空为失败，并为失败描述</returns>
        </member>
        <member name="M:ABegin.Fun.DoInterFace(System.String)">
            <summary>
            调用组件Dll 平台内部使用
            </summary>
        </member>
        <member name="M:ABegin.Fun.DoUpdate(ABegin.FLogin)">
            <summary>
             平台内部使用
            </summary>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.ToVersion(System.String)">
            <summary>
            根据版本号获取版本信息
            </summary>
            <param name="vs"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.SetLoginState(System.String)">
            <summary>
            设置登录状态提示
            </summary>
            <param name="vsVal">提示信息</param>
        </member>
        <member name="M:ABegin.Fun.CallDLLFunObj(System.String,System.String,System.Object[],System.Object@)">
            <summary>
            调用一个按AHC规范建立的DLL中的函数
            </summary>
            <param name="vsComName">DLL文件名称，如：  Zxxx.dll</param>
            <param name="vsFunCmd">函数名称（类名.函数名称）,如：InterFace._Login</param>
            <param name="vsVarsList">入口参数,若有多个，则有|分开,同时为里面值为返回值</param>
            <returns>非空为失败，并为失败描述</returns>
        </member>
        <member name="M:ABegin.Fun.CallDLLHaveFun(System.String,System.String,System.Object[])">
            <summary>
            检测某个组件dll里面是否含有某个函数
            </summary>
            <param name="vsDllFileName">DLL组件名称</param>
            <param name="vsFunName">函数名称</param>
            <param name="vsFunVarsList">参数列表</param>
            <returns>true：有，false：无</returns>
        </member>
        <member name="M:ABegin.Fun.CallDLLPro(System.String,System.String,System.Object@)">
            <summary>
            获取指定DLL里面指定公开类下一个公用的属性值
            </summary>
            <param name="vsDllFileName">DLL文件路径</param>
            <param name="vsPerName">属性名称</param>
            <param name="vsResult">属性值</param>
            <returns>空：调用成功,非空：调用失败的错误原因</returns>
        </member>
        <member name="M:ABegin.Fun.FormatXml(System.String)">
            <summary>
            格式化XML文本
            </summary>
            <param name="source">要进行XML格式化的字符串</param>
            <returns>格式化后的Xml文本</returns>
        </member>
        <member name="M:ABegin.Fun.CheckPasswWord(System.Int32)">
            <summary>
            校验输入密码
            </summary>
            <param name="viSysId">健康档案号唯一标示.系统序号</param>
            <returns>密码是否校验成功</returns>
        </member>
        <member name="M:ABegin.Fun.ChangePassWord(System.Int32)">
            <summary>
            修改健康卡交易密码
            </summary>
            <param name="viSysId">健康档案号唯一标示.系统序号</param>
            <returns>密码是否修改成功</returns>
        </member>
        <member name="M:ABegin.Fun.PutCustomValue(ABegin.ECustomValueType,System.String,System.String)">
            <summary>
            保存习惯值 已停止使用
            </summary>
            <param name="veType">终端 or 操作员</param>
            <param name="vsName">习惯值名称</param>
            <param name="vsValue">习惯值</param>
        </member>
        <member name="M:ABegin.Fun.GetCustomValue(ABegin.ECustomValueType,System.String,System.String)">
            <summary>
            获得一个记忆项的值 已停止使用
            </summary>
            <param name="veType">终端 or 操作员</param>
            <param name="vsName">习惯值名称</param>
            <param name="vsDefValue">习惯默认值</param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.SaveOptLog(System.String,System.String,System.Int64,System.String)">
            <summary>
            保存操作日志 已停止使用
            </summary>
            <param name="vs子系统编码">vs子系统编码</param>
            <param name="vs业务标识">自定义的业务标识,用于LookBill时使用</param>
            <param name="vl业务序号">当前业务关联的业务序号</param>
            <param name="vs描述">自己组织的描述，不能超过200个字符</param>
        </member>
        <member name="M:ABegin.Fun.SaveDebugLog(System.String,System.Boolean)">
            <summary>
            将调试信息（日志）保存到本机DebugLogs目录下
            </summary>
            <param name="vsText">待保存的日志文件</param>
            <param name="vbSaveScreen">是否同时将屏幕保存下来</param>
        </member>
        <member name="M:ABegin.Fun.SendDebugText(System.String,ANetAccess.TSQLPara)">
            <summary>
            如果当前为调试模式，则往调试窗口发送信息
            </summary>
            <param name="vsText">要发生的文本或T-SQL</param>
            <param name="vxParaList">T-SQL模式下的参数对象</param>
        </member>
        <member name="M:ABegin.Fun._AHCEnd">
            <summary>
            系统退出
            </summary>
        </member>
        <member name="M:ABegin.Fun.SetGridFormat(System.String,System.Int32)">
            <summary>
            设置AGridList的显示格式 (K表格格式).一般用于平台内部调用
            </summary>
            <param name="vs子系统编码">组件子系统编码</param>
            <param name="vi表格编号">K表格列表序号</param>
            <returns>空设置失败,非空返回设置后的xml</returns>
        </member>
        <member name="M:ABegin.Fun.TrimDeciZero(System.String,System.Int32)">
            <summary>
            值清理数型的字符串右边多余的零
            </summary>
            <param name="vsNum">数值型字符串</param>
            <param name="viDeciLen">小数部分总长度</param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.RunPrint(AModelList.AForm,System.String,System.String,ABegin.AELineModel,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            根据 K打印格式.格式内容 的格式打印一个文档
            </summary>
            <param name="vs子系统编号">K打印格式.子系统编码i</param>
            <param name="vs打印子编号">K打印格式.打印子编号</param>
            <param name="vs格式名称">K打印名称.名称</param>
            <param name="vbToPrint">是否直接打印</param>
            <param name="vbDispSelectList">是否显示格式选择列表</param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.RunPrintToFile(AModelList.AForm,System.String,System.String,System.String,System.String@,System.String)">
            <summary>
            执行某个打印格式，将打印内容打印到指定的图片文件
            </summary>
            <param name="vpForm"></param>
            <param name="vs子系统编号"></param>
            <param name="vs打印子编号"></param>
            <param name="vs格式编号"></param>
            <param name="vsMessagInfo"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.RunPrintToGDI(ABegin.PrintClass,AModelList.AForm,System.Drawing.Graphics,System.String,System.String,System.String,System.Drawing.Size@)">
            <summary>
            将指定打印格式绘制到指定的GDI对象
            </summary>
            <param name="printClass"></param>
            <param name="vpForm"></param>
            <param name="con"></param>
            <param name="vs子系统编号"></param>
            <param name="vs打印子编号"></param>
            <param name="vs格式编号"></param>
            <param name="iPageSize"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.PrintBofore(AModelList.AForm,System.Boolean,System.String,System.String,System.String)">
            <summary>
            打印调用之前判断是否为打印组件，内部调用
            </summary>
            <param name="aFrom">打印涉及主窗口</param>
            <param name="toPrint">是否直接打印</param>
            <param name="vs子系统编号">子系统编号</param>
            <param name="vs打印子编号">打印子编号</param>
            <param name="vs格式编号">打印格式编号</param>
            <returns>是否继续打印，true:是;false:否</returns>
        </member>
        <member name="M:ABegin.Fun.PrintBofore(AModelList.AForm,System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>
            调用外部组件进行打印
            </summary>
            <param name="aFrom">打印窗口对象</param>
            <param name="toPrint">是否直接打印</param>
            <param name="vs子系统编号">打印子系统编号</param>
            <param name="vs打印子编号">打印子编码</param>
            <param name="vs格式编号">打印格式编号</param>
            <param name="vs打印组件">打印组件名称</param>
            <returns>是否打印完毕</returns>
        </member>
        <member name="M:ABegin.Fun.RunPrint(AModelList.AForm,System.String,System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            打印指定打印格式
            </summary>
            <param name="vpForm">打印涉及到的主窗口对象</param>
            <param name="vs子系统编号">打印子系统编号</param>
            <param name="vs打印子编号">打印子编号</param>
            <param name="vs格式名称">打印格式名称,默认为空</param>
            <param name="vbToPrinter">是否直接打印</param>
            <param name="vbDispSelectList">是否弹出打印列表,选择打印格式</param>
            <param name="vs格式编号">在直接打印的情况下,格式编号</param>
            <returns>是否打印成功,true:成功;false:失败</returns>
        </member>
        <member name="M:ABegin.Fun.RunReport(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            打开运行一个报表
            </summary>
            <param name="viSysId">报表系统序号</param>
            <param name="vbInMain">是否在主界面显示</param>
            <param name="vbOnlyWin">是否只打开一个</param>
            <returns>true:运行成功;false:运行失败</returns>
        </member>
        <member name="M:ABegin.Fun.RunReport(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            报表展示
            </summary>
            <param name="vsName">报表名称</param>
            <param name="vsXml">报表格式xml</param>
            <param name="vbInMain">是否在主界面显示</param>
            <param name="vbOnlyWin">是否只打开一次</param>
            <returns>true:成功;false:失败</returns>
        </member>
        <member name="M:ABegin.Fun.CalcExp(System.String)">
            <summary>
            计算一个四则表达式(可含有+-*/)
            </summary>
            <param name="sExpList">四则表达式字符串</param>
            <returns>返回计算结果</returns>
        </member>
        <member name="M:ABegin.Fun.OpenForm(AModelList.AForm,System.Boolean)">
            <summary>
            在AHC主窗口内打开一个窗口(会被AHC管理）
            </summary>
            <param name="f1">需要打开的窗口对象</param>
            <param name="vbOnlyWin">是只打开一个主窗口,true:只打开一个;false:重复点击菜单可打开多个</param>
        </member>
        <member name="M:ABegin.Fun.f1_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            窗口鼠标移动事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ABegin.Fun.OpenForm(AModelList.AForm,System.Boolean,System.Boolean)">
            <summary>
            指定调用的情况下，以传入的是否分页为准
            </summary>
            <param name="f1">要打开的窗口对象</param>
            <param name="vbPading">是否分页</param>
            <param name="vbOnlyWin">是否只打开一个窗口</param>
        </member>
        <member name="M:ABegin.Fun.ActivateMain">
            <summary>
            重新激活父窗体，将刷新当前窗口
            </summary>
        </member>
        <member name="M:ABegin.Fun.GetGridList(System.Windows.Forms.Control)">
            <summary>
            从面板中获取GirdList控件，内部使用
            </summary>
            <param name="control">面板容器控件</param>
            <returns>获取到的表格,无返还Null</returns>
        </member>
        <member name="M:ABegin.Fun.ShowForm(AModelList.AForm,System.Boolean,System.Boolean)">
            <summary>
            在AHC平台上打开一个对话窗口
            </summary>
            <param name="f1">窗口对象</param>
            <param name="vbDefAttrib">是否使用默认值</param>
            <param name="vbWinMax">是否强制最大化</param>
            <returns>窗口中设置的值，用于通知调用程序的状态,1:窗口操作完毕,0:窗口取消</returns>
        </member>
        <member name="M:ABegin.Fun.ShowForm(AModelList.AForm,System.Boolean)">
            <summary>
            指定打开窗口的模式下，以指定的分页参数为准
            </summary>
            <param name="f1">窗口对象</param>
            <param name="vbPading">窗口所属表格是否进行分页</param>
            <returns>窗口中设置的值，用于通知调用程序的状态,1:窗口操作完毕,0:窗口取消</returns>
        </member>
        <member name="M:ABegin.Fun.ShowModeless(AModelList.AForm,System.Boolean,System.Boolean)">
            <summary>
            指定打开窗口的模式下，非模态窗口打开
            </summary>
            <param name="f1">窗口对象</param>
            <param name="vbDefAttrib">是否使用默认值</param>
            <param name="vbWinMax">是否强制最大化</param>
            <returns>窗口中设置的值，用于通知调用程序的状态,1:窗口操作完毕,0:窗口取消</returns>
        </member>
        <member name="M:ABegin.Fun.loadPadingS(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            设置容器所在的表格分页属性
            </summary>
            <param name="t">父容器对象</param>
            <param name="vbPading">表格是否分页</param>
        </member>
        <member name="M:ABegin.Fun.loadPadingO(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            设置容器所在的表格分页属性
            </summary>
            <param name="t">父容器对象</param>
            <param name="vbPading">表格是否分页</param>
        </member>
        <member name="M:ABegin.Fun.DoCan(System.String,System.Boolean,System.Boolean)">
            <summary>
            判断当前用户是否具有操作某个功能的权限:暂时未使用
            </summary>
            <param name="vsPrivCode">功能编码</param>
            <param name="vbPrompt">当不具有此功能时是否弹出提示框</param>
            <param name="vbAdminValue">当为系统管理员时，判断为真还是假</param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.DoAdvSerch(System.Windows.Forms.Control,ACtrllist.AGridList,System.String@)">
            <summary>
            对某个表格进行高级查询 平台内部使用
            </summary>
            <param name="vpPan">暂未使用,可传空</param>
            <param name="vaGridList">高级查询指定表格</param>
            <param name="vsWhere">返回高级查询的查询条件</param>
            <returns>1:确定查询 其它:取消查询</returns>
        </member>
        <member name="M:ABegin.Fun.DoRemoveAdv(System.String)">
            <summary>
            移除高级查询缓存信息，用于内部调用 平台内部使用
            </summary>
            <param name="vsGridID">要移除的缓存ID</param>
        </member>
        <member name="M:ABegin.Fun.DoRemoveFind(System.String)">
            <summary>
            移除高级查询缓存信息，用于内部调用 平台内部使用
            </summary>
            <param name="vsGridID">要移除的缓存ID</param>
        </member>
        <member name="M:ABegin.Fun.SelectICD(ABegin.AESerchModel,ABegin.ASelectICD)">
            <summary>
            选择ICD，返回选择的信息
            </summary>
            <param name="aeSerchModel">当前选择模式,西医,中医,手术</param>
            <param name="aDefaultSelect">默认选择信息</param>
            <returns>null表示取消选择,不为null返回具体选择的信息</returns>
        </member>
        <member name="M:ABegin.Fun.SelectICD(ABegin.AESerchModel,ABegin.ASelectICD,System.String)">
            <summary>
            选择ICD，返回选择的信息
            </summary>
            <param name="aeSerchModel">当前选择模式,西医,中医,手术</param>
            <param name="aDefaultSelect">默认选择信息</param>
            <returns>null表示取消选择,不为null返回具体选择的信息</returns>
        </member>
        <member name="M:ABegin.Fun.SelectTCM(ABegin.ASelectTCM)">
            <summary>
            选择中医诊断ICD，返回选择的信息
            </summary>
            <param name="aSelectTCM">默认选中的ICD诊断信息</param>
            <returns>选择的诊断信息,null 表示未选择</returns>
        </member>
        <member name="M:ABegin.Fun.DoFind(ACtrllist.AGridList)">
            <summary>
            表格内部筛选查询：内部使用
            </summary>
            <param name="gridList">要进行内部查询的表格对象</param>
        </member>
        <member name="M:ABegin.Fun.TerminalVerification">
            <summary>
            终端验证 暂未使用
            </summary>
            <returns>是否验证成功</returns>
        </member>
        <member name="M:ABegin.Fun.GetCpuId">
            <summary>
            获取电脑唯一ID,当UUID获取失败时,将获取CPUID+硬盘ID 加密后作为唯一标示
            </summary>
            <returns>获取的唯一ID字符串</returns>
        </member>
        <member name="M:ABegin.Fun.GetNewClientNum">
            <summary>
            获取新的终端硬件ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.GetMACID">
            <summary>
            获取电脑MACID
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.GetComputerID">
            <summary>
            硬盘ID+CUPID
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.GetDiskID">
            <summary>
            获取硬盘ID，内部使用
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.GetCPUNum">
            <summary>
            获取CPU编码：内部使用
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.ToMD5(System.String)">
            <summary>
            对字符串进行MD5加密
            </summary>
            <param name="vsValue">要进行加密的字符串</param>
            <returns>加密后的字符串,没有-符号</returns>
        </member>
        <member name="M:ABegin.Fun.DoCreatePDXML(System.Windows.Forms.Control,System.String)">
            <summary>
            根据当前容器和主表名称，创建对应的保存XML
            </summary>
            <param name="control">当前需要遍历的容器对象</param>
            <param name="mainTableName">主表名称</param>
        </member>
        <member name="M:ABegin.Fun.createXml(System.Windows.Forms.Control,System.String@,System.String@,System.String@)">
            <summary>
            创建XML，内部使用
            </summary>
            <param name="control"></param>
            <param name="maintable"></param>
            <param name="subtable"></param>
            <param name="deleteTable"></param>
        </member>
        <member name="M:ABegin.Fun.DoInputConvert(System.IntPtr,System.Int32,System.Int32,System.String)">
            <summary>
            输入法切换
            </summary>
            <param name="handle">要切换的窗口句柄</param>
            <param name="iMode">输入法模式1025:中文半角;1033:中文全角;0:英文半角;8:英文全角</param>
            <param name="iSentence">默认0</param>
        </member>
        <member name="M:ABegin.Fun.SetMenuVisible(System.String,System.Boolean)">
            <summary>
            设置某个菜单是否显示
            </summary>
            <param name="vsAHCCode">AHC编码</param>
            <param name="fbVisible">是否显示</param>
        </member>
        <member name="M:ABegin.Fun.IsDesignMode">
            <summary>
            判断当前程序是否是VS调试模式
            </summary>
            <returns>true:调试模式;false:非调试模式</returns>
        </member>
        <member name="M:ABegin.Fun.DoCreateViewFormat(System.String,System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            根据表名创建视图和对应的表格格式
            </summary>
            <param name="vsUserName">数据库用户名称:默认AMBASE</param>
            <param name="vsTableName">表名</param>
            <param name="vsCodeId">组件编码</param>
            <param name="vsFormatName">表格格式名称</param>
            <param name="vs枚举字段">N数据类型枚举信息，格式 列名1\t1|状态1;2|状态2;3|状态3@列名2\t1|状态1;2|状态2;3|状态3</param>
            <param name="vsTableId">创建后的表格格式编码</param>
            <returns>是否创建成功</returns>
        </member>
        <member name="M:ABegin.Fun.DoCreateTable(System.String,System.String,System.String,System.String@)">
            <summary>
            内部使用
            </summary>
            <param name="vsTableName"></param>
            <param name="vs组件编码I"></param>
            <param name="vsFormatName"></param>
            <param name="vsTableId"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.DoCreateView(System.String,System.String,System.String)">
            <summary>
            内部使用
            </summary>
            <param name="vsUserName"></param>
            <param name="vsTableName"></param>
            <param name="vs枚举字段"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.Get透视语句(System.String,System.String@)">
            <summary>
            内部使用
            </summary>
            <param name="vs原字段"></param>
            <param name="vS透视语句"></param>
        </member>
        <member name="F:ABegin.Fun.fi别名Asc">
            <summary>
            内部使用
            </summary>
        </member>
        <member name="M:ABegin.Fun.Get外键关联语句(System.String,System.String@,System.String@)">
            <summary>
            内部使用
            </summary>
            <param name="vFkColName"></param>
            <param name="vS字段列表"></param>
            <param name="vS关联语句"></param>
        </member>
        <member name="M:ABegin.Fun.DoRegionControl(ACtrllist.AButton)">
            <summary>
            控制管理员非调试模式下的功能按钮控制：内部使用
            </summary>
            <param name="bt"></param>
        </member>
        <member name="M:ABegin.Fun.PerToHosAdmin">
            <summary>
            平台内部调用
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.HaveTable(System.String)">
            <summary>
            检测当前表名是否存在
            </summary>
            <param name="vsTableName">表名</param>
            <returns>true:当前表已经存在,false:当前表不存在</returns>
        </member>
        <member name="M:ABegin.Fun.HaveView(System.String)">
            <summary>
            检测当前视图是否存在
            </summary>
            <param name="vsViewName">视图名称</param>
            <returns>true：当前视图已经存在,false：当前视图不存在</returns>
        </member>
        <member name="M:ABegin.Fun.HaveSequence(System.String)">
            <summary>
            检测当前序列是否存在
            </summary>
            <param name="vsSequenceName">序列名称</param>
            <returns>true：当前序列已经存,false：当前序列不存在</returns>
        </member>
        <member name="M:ABegin.Fun.HaveJobs(System.String)">
            <summary>
            检测当前作业是否存在
            </summary>
            <param name="vsSequenceName">作业名称</param>
            <returns>true：当前作业已经存,false：当前作业不存在</returns>
        </member>
        <member name="M:ABegin.Fun.HaveColumn(System.String,System.String)">
            <summary>
            检测某个表的某列是否存在
            </summary>
            <param name="vsTableName">表名</param>
            <param name="vsColumnName">列名</param>
            <returns>true:当前表所在列存在,false:当前表所在列不存在</returns>
        </member>
        <member name="M:ABegin.Fun.VisButton(ACtrllist.AButton)">
            <summary>
            平台内部使用
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:ABegin.Fun.ReplaceToCode(System.String)">
            <summary>
            替换XML关键字符为转义字符
            </summary>
            <param name="vsValue">要替换的文本</param>
            <returns>替换后的文本</returns>
        </member>
        <member name="M:ABegin.Fun.ReplaceToVal(System.String)">
            <summary>
            替换XML转义字符为实际操作符
            </summary>
            <param name="vsCode">要替换的文本</param>
            <returns>替换后的文本</returns>
        </member>
        <member name="M:ABegin.Fun.UpdateBT">
            <summary>
            更新登陆首页刷新界面：已经停用
            </summary>
        </member>
        <member name="M:ABegin.Fun.StartRefresh">
            <summary>
            开始自动刷新连接数据库 平台内部使用
            </summary>
        </member>
        <member name="M:ABegin.Fun.StopRefresh">
            <summary>
            停止自动刷新连接数据库 平台内部使用
            </summary>
        </member>
        <member name="M:ABegin.Fun.SaveRecord(System.String)">
            <summary>
            记录操作记录：已经停用
            </summary>
            <param name="vs描述"></param>
        </member>
        <member name="M:ABegin.Fun.WriteLog(System.String)">
            <summary>
            记录本机操作日志,记录文件在本地[业务日志]文件夹
            </summary>
            <param name="vsString">要进行日志记录的文本信息</param>
        </member>
        <member name="M:ABegin.Fun.WriteLog_Error(System.String)">
            <summary>
            记录异常日志
            </summary>
            <param name="vsString"></param>
        </member>
        <member name="M:ABegin.Fun.DoSendTelMessage(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            向指定用户发送短信
            </summary>
            <param name="vs接收姓名">接受者姓名</param>
            <param name="vs接收手机">接收手机号码</param>
            <param name="vs内容">短信内容</param>
            <param name="vs类型">短信类型,定义模块发送类型;如：住院结算</param>
            <param name="vs标题">短信标题,暂时可为空</param>
        </member>
        <member name="M:ABegin.Fun.Do获取打印机(System.String)">
            <summary>
            获取打印机 平台内部使用
            </summary>
            <param name="vs当前打印机">当前打印机</param>
            <returns>返回实际可用的打印机</returns>
        </member>
        <member name="M:ABegin.Fun.DoUpLoadFile(System.String,System.String,System.String,System.String,System.String,System.String@,System.String,System.Boolean)">
            <summary>
            上传文件
            </summary>
            <param name="vsFilePath">本地文件路径</param>
            <param name="vsSubCode">文件分类,多用组件编码</param>
            <param name="vsTableName">数据所在表名,用于唯一区分文件</param>
            <param name="vsColName">数据所在列名,用于唯一区分文件</param>
            <param name="vsRowNo">数据所在序号,用于唯一区分文件</param>
            <param name="vsOutFileName">输出上传后的文件名,需要以此文件名为准</param>
            <param name="vsTarget">目标文件服务器,默认为系统文件服务器</param>
            <param name="vbPublic">当前文件是否共用,默认不共用</param>
            <returns>空,上传成功,失败为失败原因</returns>
        </member>
        <member name="M:ABegin.Fun.DoUpLoadFile(System.String,System.String,System.String@,System.String,System.Boolean)">
            <summary>
            上传文件
            </summary>
            <param name="vsFilePath">本地文件路径</param>
            <param name="vsSubCode">文件分类,多用组件编码</param>
            <param name="vsTarget">上传地址,默认为配置的服务器</param>
            <param name="vsFileName">返回上传后的文件名</param>
            <param name="vbPublic">当前文件是否共用</param>
            <returns>空:上传成功,非空:上传失败,为失败原因</returns>
        </member>
        <member name="M:ABegin.Fun.DoDownLoadFile(System.String,System.String,System.String@,System.String,System.Boolean)">
            <summary>
            下载文件
            </summary>
            <param name="vsFileName">本地文件名称</param>
            <param name="vsSubCode">文件分类,多用组件编码</param>
            <param name="vsFilePath">下载成功后,本地文件路径</param>
            <param name="vsTarget">下载地址,默认为配置的服务器</param>
            <param name="vbPublic">当前文件是否是共用文件,和上传的时候匹配</param>
            <returns>空:下载成功,非空:下载失败,为失败原因</returns>
        </member>
        <member name="M:ABegin.Fun._DoDownLoadFile(System.String,System.String,System.String,System.String@,System.String,System.Boolean)">
            <summary>
            下载文件：内部使用
            </summary>
            <param name="vCode"></param>
            <param name="vsFileName"></param>
            <param name="vsSubCode"></param>
            <param name="vsFilePath"></param>
            <param name="vsTarget"></param>
            <param name="vbPublic"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.getNewFileName(System.String)">
            <summary>
            获取一个新的文件名
            </summary>
            <param name="vsFileName"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.DoGetFiles(System.String,System.String,System.Boolean@)">
            <summary>
            获取服务器最新的文件列表信息
            </summary>
            <param name="vsfilePath"></param>
            <param name="vsTarget"></param>
            <param name="falg"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.DoDeleteFiles(System.String,System.String,System.String,System.Boolean)">
            <summary>
            删除一个指定的文件
            </summary>
            <param name="vsFileName">文件名</param>
            <param name="vsSubCode">组件编码</param>
            <param name="vsTarget">目标服务器IP，默认文件服务器</param>
            <param name="vbPublic">是否是公共资源</param>
            <returns>空：成功：非空：失败，为失败的原因</returns>
        </member>
        <member name="M:ABegin.Fun.DoGetFiles(System.String,System.String)">
            <summary>
            平台内部使用
            </summary>
            <param name="vsFilePath"></param>
            <param name="vsTarget"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.ExistFile(System.String,System.String,System.Boolean)">
            <summary>
            平台内部使用
            </summary>
            <param name="vsFileName"></param>
            <param name="vsSubCode"></param>
            <param name="vbPublic"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.GetBarcode(System.Int32,System.Int32,ABegin.BarcodeType,System.String,System.Drawing.Image@,System.String)">
            <summary>
            获取生成条形码
            </summary>
            <param name="viHeight">区域高度</param>
            <param name="viWidth">区域高度</param>
            <param name="aeType">条形码格式</param>
            <param name="vsCode">条形码内容</param>
            <param name="viImage">输出条形码图片</param>
            <param name="vsFileSavePath">条形码图片本地保存路径</param>
        </member>
        <member name="M:ABegin.Fun.SaveOptLog(System.String)">
            <summary>
            保存操作记录日志
            </summary>
            <param name="vsText">日志信息</param>
        </member>
        <member name="M:ABegin.Fun.GetMessageID">
            <summary>
            获取当前发送的消息ID，当前获取的是最后一次推送消息的消息ID，在MessagePush后获取有效
            </summary>
            <returns>当前消息ID，可用于撤销消息</returns>
        </member>
        <member name="M:ABegin.Fun.RevokeMessage(System.String)">
            <summary>
            消息撤回,id通过getmessageid获取
            </summary>
            <param name="vsMessageId"></param>
        </member>
        <member name="M:ABegin.Fun.MessagePush(System.String,System.String,ABegin.EMsgRec,System.String[],System.Double)">
            <summary>
            消息推送,推送失败将抛出异常
            </summary>
            <param name="vsMsgTypeId">消息类型ID</param>
            <param name="vsMessageText">消息文本</param>
            <param name="eMsgRec">分发类型</param>
            <param name="ObjectId">分发对象序号集合</param>
            <param name="viActiveTime">消息有效时间,为0表示无限制,1表示1小时内有效</param>
        </member>
        <member name="M:ABegin.Fun.MessagePush(System.String,System.String,ABegin.EMsgRec,System.String[])">
            <summary>
            消息推送,推送失败将抛出异常
            </summary>
            <param name="vsMsgTypeId">消息类型ID</param>
            <param name="vsMessageText">消息文本</param>
            <param name="eMsgRec">分发类型</param>
            <param name="ObjectId">分发对象序号集合</param>
        </member>
        <member name="M:ABegin.Fun.GetMsgInfo(System.String[])">
            <summary>
            获取消息信息 内部使用
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.GetMsgID(System.Int32)">
            <summary>
            获取消息序号ID
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.MessagePush(System.String,System.String)">
            <summary>
            消息推送,推送失败将抛出异常 当前功能已停用
            </summary>
            <param name="vsMsgTypeId">消息类型ID,需要注册:ams_b消息类型</param>
            <param name="vsMessageText">消息内容</param>
        </member>
        <member name="M:ABegin.Fun.MessageAsRead_Rec(System.String)">
            <summary>
            标记消息为已读：使用枚举对象的时候确认
            </summary>
            <param name="vsMessageID">消息ID</param>
            <returns>空：标记成功,非空：标记失败,为失败的错误信息</returns>
        </member>
        <member name="M:ABegin.Fun.MessageAsRead_Rec_Batch(System.String[])">
            <summary>
            批量已读消息
            </summary>
            <param name="vsMessageID">消息ID</param>
            <returns>空，成功，非空为失败消息</returns>
        </member>
        <member name="M:ABegin.Fun.MessageAsRead(System.String)">
            <summary>
            标记消息为已读
            </summary>
            <param name="vsMessageID">消息ID</param>
            <returns>空：标记成功,非空：标记失败,为失败的错误信息</returns>
        </member>
        <member name="M:ABegin.Fun.GetMessageInfo(System.String)">
            <summary>
            获取消息信息
            </summary>
            <param name="vsMsgTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.MessageAsReadSocket(System.String,System.Boolean)">
            <summary>
            消息已读标记
            </summary>
            <param name="vsID">消息ID</param>
            <param name="vbNew">是否是分发类型还是单发类型</param>
        </member>
        <member name="M:ABegin.Fun.SendMessageSocket(System.String,System.String,System.String,ABegin.EMsgRec,System.Text.StringBuilder,System.Text.StringBuilder,System.Double)">
            <summary>
            分发消息
            </summary>
            <param name="vsID">消息ID</param>
            <param name="vsMsgTypeId">消息类型</param>
            <param name="vsMessageText">消息文本</param>
            <param name="eMsgRec">分发对象</param>
            <param name="ObjectId">对象序号集合</param>
            <param name="DisID"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.SendMessageSocket(System.String,System.String,System.String,System.Double)">
            <summary>
            发送消息
            </summary>
            <param name="vsID"></param>
            <param name="vsMsgTypeId"></param>
            <param name="vsMessageText"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.GetOracleLength(System.String)">
            <summary>
            获取Oracle格式的字符长度
            </summary>
            <param name="vsValue"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.AddLisenterForm(System.String,AModelList.AForm)">
            <summary>
            平台内部使用
            </summary>
            <param name="vsMsgType"></param>
            <param name="vaForm"></param>
        </member>
        <member name="M:ABegin.Fun.RemoveLisenterForm(AModelList.AForm)">
            <summary>
            平台内部使用
            </summary>
            <param name="vaForm"></param>
        </member>
        <member name="M:ABegin.Fun.ModuleRegState(System.String)">
            <summary>
            判断当前机构某个模块是否注册
            </summary>
            <param name="vsModuleNum"></param>
        </member>
        <member name="M:ABegin.Fun.PushTerminalMessage(System.Int32,System.Int32)">
            <summary>
            推送消息到手机终端
            </summary>
            <param name="int类型"></param>
            <param name="int业务编号"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.PushTerminalMessage(System.String,System.String,System.String)">
            <summary>
            推送消息到手机终端
            </summary>
            <param name="vsHealthId">健康ID</param>
            <param name="vsMobNo">手机号</param>
            <param name="vsText">消息内容</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:ABegin.Fun.GetPriceModel(System.String)">
            <summary>
            获取当前单价模式
            </summary>
            <param name="vsTypeId">病人费别ID</param>
            <returns>1：默认单价，2：第二单价</returns>
        </member>
        <member name="M:ABegin.Fun.IsCardModel(System.String@)">
            <summary>
            根据文本检测当前文本是否是通过刷卡活动
            </summary>
            <param name="vsText">文本</param>
            <returns>true：是，false：否</returns>
        </member>
        <member name="M:ABegin.Fun.ToDBC(System.String)">
            <summary>
            内部使用
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.LeadCockpitReport(System.Int32)">
             <summary>
            打开一个决策支持
             </summary>
             <param name="vsReportId"></param>
             <returns>需要使用容器进行接收</returns>
        </member>
        <member name="M:ABegin.Fun.LockSystem">
            <summary>
            锁定系统 平台内部调用
            </summary>
        </member>
        <member name="M:ABegin.Fun.LockSystem_Auto">
            <summary>
            自动锁定系统
            </summary>
        </member>
        <member name="M:ABegin.Fun.SetPrintCache(System.String,System.String,System.String)">
            <summary>
            平台内部使用
            </summary>
            <param name="vsID"></param>
            <param name="vsText"></param>
        </member>
        <member name="M:ABegin.Fun.GetPrintCache(System.String,System.String)">
            <summary>
            获取本地打印缓存信息，平台内部使用
            </summary>
            <param name="vsID">打印序号</param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.CompressData(System.String@)">
            <summary>
            压缩数据 平台内部使用
            </summary>
            <param name="vsValue"></param>
        </member>
        <member name="M:ABegin.Fun.UpCompressData(System.String@)">
            <summary>
            解压数据 平台内部使用
            </summary>
            <param name="vsValue"></param>
        </member>
        <member name="M:ABegin.Fun.ToJSON(System.Data.DataTable)">
            <summary>
            datatable转换为json
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.ToCompress(System.String)">
            <summary>
            压缩字符串
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.Decompress(System.String)">
            <summary>
            解压缩字符串
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.ToDataTable(System.String)">
            <summary>
            json转换为datatable
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.ReadConfigIni(System.String,System.String,System.String)">
            <summary>
            读取ini配置文件信息
            </summary>
            <param name="fileName">文件名</param>
            <param name="section">文件节点名称</param>
            <param name="ident">配置名称</param>
            <returns>配置信息</returns>
        </member>
        <member name="M:ABegin.Fun.UpdateCustomPer(System.String,System.String)">
            <summary>
            更新本次自定义权限信息
            </summary>
            <param name="sMenuCode">菜单编码</param>
            <param name="sPerCode">权限编码</param>
        </member>
        <member name="M:ABegin.Fun.UpdateCustomPer(ABegin.ACustomPer[])">
            <summary>
            /// 更新本次自定义权限信息
            </summary>
            <param name="perNums">本次添加的权限编码集合</param>
        </member>
        <member name="M:ABegin.Fun.UpdateQuickMenu(System.String,System.String)">
            <summary>
            更新快捷键菜单，平台调用
            </summary>
            <param name="vs菜单编码">菜单编码</param>
            <param name="vs快捷键">快捷按键</param>
        </member>
        <member name="M:ABegin.Fun._GetMenuClass(System.String)">
            <summary>
            根据菜单编码，获取菜单信息
            </summary>
            <param name="vs菜单编码">菜单编码</param>
            <returns>菜单信息</returns>
        </member>
        <member name="M:ABegin.Fun.StartShortcutMenu(System.Windows.Forms.Keys)">
            <summary>
            启动快捷键菜单功能
            </summary>
            <param name="keyCode">当前按键</param>
        </member>
        <member name="M:ABegin.Fun.DoResetOrder(System.String)">
            <summary>
            重置数据字典显示顺序
            </summary>
            <param name="vsTableName"></param>
        </member>
        <member name="M:ABegin.Fun.GetNewOrderNo(System.String)">
            <summary>
            获取待新增的显示顺序值
            </summary>
            <param name="vsTableName">表名</param>
        </member>
        <member name="M:ABegin.Fun.DoScan">
            <summary>
            扫描枪扫码
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.UserLogin">
            <summary>
            操作员登录,记录流水,平台内部调用
            </summary>
        </member>
        <member name="M:ABegin.Fun.UserExit">
            <summary>
            操作员退出,更新退出标志,平台内部调用
            </summary>
        </member>
        <member name="M:ABegin.Fun.GetCacheDataBySql(System.String,ANetAccess.TSQLPara)">
            <summary>
            获取数据集合对象,带缓存
            </summary>
            <param name="sql">要获取的SQL</param>
            <param name="tSqlPara">SQL参数</param>
            <returns>数据集合对象</returns>
        </member>
        <member name="M:ABegin.Fun.GetCacheDataByCode(System.String,System.String,System.String)">
            <summary>
            根据缓存编码获取缓存信息
            </summary>
            <param name="code">预先登记的缓存编码</param>
            <param name="filterExpression">过滤信息</param>
            <param name="sort">排序列表</param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.SetLoginDepart(System.Int64,System.String)">
            <summary>
            设置登录科室信息
            </summary>
            <param name="id">科室ID</param>
            <param name="name">科室名称</param>
        </member>
        <member name="M:ABegin.Fun.SetLoginUser(System.Int64,System.String,System.String)">
            <summary>
            设置登录用户
            </summary>
            <param name="id">用户ID</param>
            <param name="code">用户编码</param>
            <param name="name">用户名</param>
        </member>
        <member name="M:ABegin.Fun.AddTableFormat(System.String,System.String,System.String,System.String)">
            <summary>
            添加表格格式列信息,在不修改原有表格列信息的情况下添加一个新列
            </summary>
            <param name="vsSubCode">组件编码</param>
            <param name="vsGridID">表格编号.组件子编码</param>
            <param name="vsNewCol">新列信息,包含完整Col节点</param>
            <param name="vsLastName">上一个节点名称,默认为空插入到原有表格的最后,不为空则插入到指定节点的后面</param>
        </member>
        <member name="M:ABegin.Fun.SetLoginClient(System.Int64)">
            <summary>
            设置登录终端信息
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:ABegin.Fun.SerializeObject(System.Object)">
            <summary>
            序列号object为json格式
            </summary>
            <param name="obj">对象</param>
            <returns>json</returns>
        </member>
        <member name="M:ABegin.Fun.DeserializeObject(System.String,System.Type)">
            <summary>
            将json格式转换为object
            </summary>
            <param name="json">json</param>
            <returns>对象</returns>
        </member>
        <member name="M:ABegin.Fun.SetLocalCache(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            设置本地缓存信息(将以本地文件的方式写入)
            </summary>
            <param name="vs组件编码">缓存组件编码</param>
            <param name="vs组件子编码">缓存组件子编码</param>
            <param name="vs系统序号">缓存序号 和组件编码,组件子编码联合唯一</param>
            <param name="vs同步序号">缓存同步序号,根据同步需要判断是否获取缓存还是从数据库获取</param>
            <param name="vs缓存内容">当前缓存的内容</param>
        </member>
        <member name="M:ABegin.Fun.GetLocalCache(System.String,System.String,System.String,System.String)">
            <summary>
            获取本地缓存信息（需要先Set）
            </summary>
            <param name="vs组件编码">组件编码</param>
            <param name="vs组件子编码">组件子编码</param>
            <param name="vs系统序号">缓存序号 和组件编码,组件子编码联合唯一</param>
            <param name="vs同步序号">缓存同步序号</param>
            <returns>当返回为空,表示获取失败,需要从数据库进行查询,当返回非空,表示获取成功</returns>
        </member>
        <member name="M:ABegin.Fun.AddUpgradeLogs(System.String,System.String,System.String)">
            <summary>
            添加升级记录信息,会在软件里面显示
            </summary>
            <param name="vsText">升级内容,简要描述当前升级内容</param>
            <param name="vsModel">相关模块(如：门诊、LIS)</param>
            <param name="vsKey">记录标识,如果有可传。没有可不传</param>
        </member>
        <member name="M:ABegin.Fun.SaveHandleTimes(System.Int64,System.Int64)">
            <summary>
            记录操作模块的使用次数
            </summary>
            <param name="vi模块类别i">使用模块序号,对应AMS_B模块类别的系统序号</param>
            <param name="vi模块明细i">为0表示无明细序号,非0表示记录某个表某个记录的操作次数</param>
        </member>
        <member name="M:ABegin.Fun.SetTipsInfo(ABegin.ATipsInfo)">
            <summary>
            设置提示信息，会在下方状态栏显示
            </summary>
            <param name="tipsInfo"></param>
        </member>
        <member name="M:ABegin.Fun.Dispose(System.Windows.Forms.Control)">
            <summary>
            释放项目资源,指定面板或窗口
            </summary>
            <param name="con"></param>
        </member>
        <member name="M:ABegin.Fun.GetSynData(ABegin.ESynType,System.String,System.String,System.Int64,System.Int64,System.Int64,System.Int64,ANetAccess.TSQLPara)">
            <summary>
            获取同步缓存数据，基于数据改变频率较小,且获取数据频繁的时候调用。当数据发生改变时更新同步缓存列表同步序号,用于标识客户端数据需要刷新
            </summary>
            <param name="synType">数据源类型，Sql或Proc 数据源</param>
            <param name="vsSqlText">sql或proc内容</param>
            <param name="vsSysID">缓存编号ID,AMS_K数据同步记录</param>
            <param name="viOrgID">当前数据机构ID值,默认为0，当vsSqlText数据脚本里面需要过滤机构的时候传入</param>
            <param name="viUserID">当前数据用户ID值，默认为0，当vsSqlText数据脚本里面需要过滤操作员的时候传入</param>
            <param name="viDepentID">当前数据科室ID值，默认为0，当vsSqlText数据脚本里面需要过滤科室的时候传入</param>
            <param name="viClientID">当前数据终端ID值，默认为0，当vsSqlText数据脚本里面需要过滤终端的时候传入</param>
            <param name="tsqlPara">当是SQL模式的情况下附带的SQLPara参数</param>
            <returns>数据结果集</returns>
        </member>
        <member name="M:ABegin.Fun.UpdateSynNo(System.String)">
            <summary>
            更新缓存数据标识,标识数据已经被更新,客户端需要同步
            </summary>
            <param name="vsSynIDs">需要同步的缓存编号,多个编号使用,分割</param>
        </member>
        <member name="M:ABegin.Fun._Dispose(System.Windows.Forms.Control)">
            <summary>
            是否容器控件 内部使用
            </summary>
            <param name="pCtrl"></param>
        </member>
        <member name="M:ABegin.Fun.GetThemeColor">
            <summary>
            获取平台主题色
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.Fun.GetControl(System.Windows.Forms.Control)">
            <summary>
            遍历获取指定容器里面的所有控件信息，以文本信息输出
            </summary>
            <param name="fControl">要遍历的容器</param>
        </member>
        <member name="M:ABegin.Fun._GetControl(System.Windows.Forms.Control,System.Text.StringBuilder)">
            <summary>
            递归 内部使用
            </summary>
            <param name="con"></param>
            <param name="str"></param>
        </member>
        <member name="M:ABegin.Fun.CASignData(System.String,System.String,System.String)">
            <summary>
            数据签名
            </summary>
            <param name="type">验证类型序号,需平台注册登记</param>
            <param name="typeId">类型流水号</param>
            <param name="signData">需要签名的数据</param>
            <returns>签名序号. 返回空表示操作失败,非空为签名序号</returns>
        </member>
        <member name="M:ABegin.Fun.CAVerifySignData(System.String,System.String)">
            <summary>
            验证数据签名
            </summary>
            <param name="signId">签名序号</param>
            <param name="signData">需要验证的数据</param>
            <returns>true验证成功,false验证失败,失败将抛出异常</returns>
        </member>
        <member name="M:ABegin.Fun.CASignHandBook(System.String,System.String,System.String,ABegin.ACAHandUserInfo,ABegin.ACAHandEnum)">
            <summary>
            获取信手书签名信息并保存
            </summary>
            <param name="signType">验证类型序号,需平台注册登记</param>
            <param name="signData">和用户手书关联的关键数据</param>
            <param name="userInfo">用户信息,包含用户姓名、证件类型、证件号</param>
            <param name="handEnum">获取验证信息类型,目前支持指纹图片和签名图片</param>
            <returns>返回null表示取消获取或获取失败.正常根据handEnum返回具体的数据和签名序号,目前支持指纹图片和签名图片</returns>
        </member>
        <member name="M:ABegin.Fun.CAVerifySignHandBook(System.String,System.String)">
            <summary>
            验证信手书签名数据
            </summary>
            <param name="signId">签名序号</param>
            <param name="signData">和用户手书关联的关键数据,需原文</param>
            <returns>true验证通过,false验证失败</returns>
        </member>
        <member name="M:ABegin.Fun.ChangeDepart">
            <summary>
            切换当前登录科室
            </summary>
        </member>
        <member name="F:ABegin.FCreateXml.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.FCreateXml.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.FCreateXml.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ABegin.FShowPanel.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.FShowPanel.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.FShowPanel.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ABegin.AFileCheck">
            <summary>
            检测本地程序文件环境
            </summary>
        </member>
        <member name="F:ABegin.AFileCheck.fsFilesMsg">
            <summary>
            文件信息，一次登录只取一次
            </summary>
        </member>
        <member name="M:ABegin.AFileCheck.CheckFile">
            <summary>
            检测文件环境
            </summary>
            <returns>true检测通过，false检测不通过</returns>
        </member>
        <member name="M:ABegin.AFileCheck.GetVersion(System.String)">
            <summary>
            获取文件版本信息
            </summary>
            <param name="name"></param>
            <returns>文件版本</returns>
        </member>
        <member name="M:ABegin.AFileCheck.DoGetFiles(System.String,System.Boolean@)">
            <summary>
            获取服务器升级目录文件信息
            </summary>
            <param name="vsTarget"></param>
            <param name="falg"></param>
            <returns></returns>
        </member>
        <member name="F:ABegin.FLockSystem_Main.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.FLockSystem_Main.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.FLockSystem_Main.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ABegin.AUIManage">
            <summary>
            系统UI控制管理类
            </summary>
        </member>
        <member name="F:ABegin.AUIManage.aUIStyle">
            <summary>
            当前系统显示样式明细设置信息
            </summary>
        </member>
        <member name="M:ABegin.AUIManage.InitUI">
            <summary>
            初始化获取系统UI设置项
            </summary>
        </member>
        <member name="M:ABegin.AUIManage.GetUIStyle">
            <summary>
            获取当前系统UI明细信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.AUIManage.SetUIStyle(ABegin.AUISTyle,System.String)">
            <summary>
            设置系统UI信息
            </summary>
            <param name="au"></param>
            <param name="vsType"></param>
        </member>
        <member name="T:ABegin.AUISTyle">
            <summary>
            平台系统UI显示详细参数类
            </summary>
        </member>
        <member name="F:ABegin.AUISTyle.vc主题背景">
            <summary>
            主题背景色
            </summary>
        </member>
        <member name="F:ABegin.AUISTyle.vc窗口标题背景">
            <summary>
            窗口标题背景色
            </summary>
        </member>
        <member name="F:ABegin.AUISTyle.vc窗口标题文字颜色">
            <summary>
            窗口标题文字色
            </summary>
        </member>
        <member name="F:ABegin.FLockSystem.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.FLockSystem.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.FLockSystem.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ABegin.BeginForm.F悬浮阴影.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.BeginForm.F悬浮阴影.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.BeginForm.F悬浮阴影.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ABegin.BeginForm.F升级记录查看">
            <summary>
            已停用
            </summary>
        </member>
        <member name="F:ABegin.BeginForm.F升级记录查看.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.BeginForm.F升级记录查看.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.BeginForm.F升级记录查看.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ABegin.FCaLogin_Auth.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.FCaLogin_Auth.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.FCaLogin_Auth.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ABegin.FCaLogin.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.FCaLogin.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.FCaLogin.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ABegin.CAAuthManage">
            <summary>
            Arrcen 签名认证核心服务
            </summary>
        </member>
        <member name="F:ABegin.CAAuthManage.aEnable">
            <summary>
            当前签名认证是否启用
            </summary>
        </member>
        <member name="F:ABegin.CAAuthManage.aCAType">
            <summary>
            接入厂商
            </summary>
        </member>
        <member name="M:ABegin.CAAuthManage.Init">
            <summary>
            初始化CA信息
            </summary>
        </member>
        <member name="M:ABegin.CAAuthManage.Login">
            <summary>
            登录验证
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.CAAuthManage.CASignData(System.String,System.String,System.String)">
            <summary>
            平台数据签名
            </summary>
            <param name="type">业务类型序号,平台申请</param>
            <param name="typeId">业务类型流水号</param>
            <param name="inputData">签名数据</param>
            <returns>签名序号</returns>
        </member>
        <member name="M:ABegin.CAAuthManage.CAVerifySignData(System.String,System.String)">
            <summary>
            验证数据
            </summary>
            <param name="signId"></param>
            <param name="signData"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.CAAuthManage.CAVerifySignHandBook(System.String,System.String)">
            <summary>
            验证信手书数据
            </summary>
            <param name="signId"></param>
            <param name="signData"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.CAAuthManage.SignData(System.String)">
            <summary>
            数据签名
            </summary>
            <param name="inputData">需要签名的数据</param>
            <returns></returns>
        </member>
        <member name="M:ABegin.CAAuthManage.CreateTime(System.String)">
            <summary>
            加盖时间戳
            </summary>
            <param name="inputData">要加盖时间戳的数据</param>
            <returns>时间戳</returns>
        </member>
        <member name="M:ABegin.CAAuthManage.UserCert">
            <summary>
            获取证书
            </summary>
            <returns>证书数据</returns>
        </member>
        <member name="M:ABegin.CAAuthManage.CABind">
            <summary>
            绑定证书
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.CAAuthManage.CAAuth(System.String)">
            <summary>
            指定用户CA认证
            </summary>
            <param name="userid">用户序号</param>
            <returns>认证信息,null表示取消认证或认证失败</returns>
        </member>
        <member name="T:ABegin.ACAHandInfo">
            <summary>
            CA信手书返回信息,具体取值和ACAHandEnum传值相对应.
            </summary>
        </member>
        <member name="F:ABegin.ACAHandInfo.aSignId">
            <summary>
            签名序号
            </summary>
        </member>
        <member name="F:ABegin.ACAHandInfo.aImage_bj">
            <summary>
            笔迹图片
            </summary>
        </member>
        <member name="F:ABegin.ACAHandInfo.aImage_zw">
            <summary>
            指纹图片
            </summary>
        </member>
        <member name="T:ABegin.ACAHandUserInfo">
            <summary>
            CA信手书签名用户信息
            </summary>
        </member>
        <member name="F:ABegin.ACAHandUserInfo.aName">
            <summary>
            用户姓名
            </summary>
        </member>
        <member name="F:ABegin.ACAHandUserInfo.aIDType">
            <summary>
            用户证件类型
            </summary>
        </member>
        <member name="F:ABegin.ACAHandUserInfo.aIDNo">
            <summary>
            证件号码
            </summary>
        </member>
        <member name="T:ABegin.ACAIDType">
            <summary>
            CA信手书用户证件类型
            </summary>
        </member>
        <member name="T:ABegin.ACAHandEnum">
            <summary>
            CA信手书获取参数类型
            </summary>
        </member>
        <member name="T:ABegin.ACACertInfo">
            <summary>
            CA认证绑定信息
            </summary>
        </member>
        <member name="F:ABegin.ACACertInfo.aCertEndDate">
            <summary>
            有效期结束
            </summary>
        </member>
        <member name="F:ABegin.ACACertInfo.aCertEntity">
            <summary>
            唯一实体标识
            </summary>
        </member>
        <member name="F:ABegin.ACACertInfo.aCertId">
            <summary>
            用户唯一ID
            </summary>
        </member>
        <member name="F:ABegin.ACACertInfo.aCertSN">
            <summary>
            证书序列号
            </summary>
        </member>
        <member name="F:ABegin.ACACertInfo.aCertStartDate">
            <summary>
            有效期开始
            </summary>
        </member>
        <member name="F:ABegin.ACACertInfo.aCertType">
            <summary>
            证书类型
            </summary>
        </member>
        <member name="F:ABegin.ACACertInfo.aUserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="F:ABegin.ACACertInfo.aBase64Pic">
            <summary>
            签名图片
            </summary>
        </member>
        <member name="T:ABegin.FUserImage">
            <summary>
            员工档案照片自定义上传删除
            </summary>
        </member>
        <member name="F:ABegin.FUserImage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.FUserImage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.FUserImage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ABegin.BeginForm.F登录状态提醒">
            <summary>
            医疗保险接口 操作员已登录
            </summary>
        </member>
        <member name="F:ABegin.BeginForm.F登录状态提醒.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.BeginForm.F登录状态提醒.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.BeginForm.F登录状态提醒.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ABegin.BeginForm.F接口复制">
            <summary>
            快速复制未注册接口
            </summary>
        </member>
        <member name="F:ABegin.BeginForm.F接口复制.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.BeginForm.F接口复制.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.BeginForm.F接口复制.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:ABegin.FAbout.#ctor">
            <summary>
            关于Arrcen
            </summary>
        </member>
        <member name="F:ABegin.FAbout.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.FAbout.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.FAbout.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ABegin.F升级确认.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.F升级确认.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.F升级确认.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ABegin.FAdminPwd">
            <summary>
            9001 管理员密码校验
            </summary>
        </member>
        <member name="F:ABegin.FAdminPwd.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.FAdminPwd.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.FAdminPwd.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ABegin.F快捷通道.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.F快捷通道.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.F快捷通道.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:ABegin.F快捷通道.aButton1_Click(System.Object,System.EventArgs)">
            <summary>
            上移
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:ABegin.Debug">
            <summary>
            sqldebug
            </summary>
        </member>
        <member name="F:ABegin.Debug._bIsDebug">
            <summary>
            是否是调试状态
            </summary>
        </member>
        <member name="F:ABegin.Debug.Vip">
            <summary>
            当前跟踪监听IP
            </summary>
        </member>
        <member name="F:ABegin.Debug.Inter">
            <summary>
            当前跟踪监听端口
            </summary>
        </member>
        <member name="F:ABegin.Debug._isLogin">
            <summary>
            是否已登录
            </summary>
        </member>
        <member name="F:ABegin.Debug.fileLogs">
            <summary>
            日志文件流
            </summary>
        </member>
        <member name="F:ABegin.Debug.tLogDateTime">
            <summary>
            日志日期
            </summary>
        </member>
        <member name="F:ABegin.Debug._IsRegionAdmin">
            <summary>
            是否区域管理员
            </summary>
        </member>
        <member name="F:ABegin.Debug._MenuManage">
            <summary>
            是否系统管理菜单
            </summary>
        </member>
        <member name="F:ABegin.Debug._IsHosAdmin">
            <summary>
            是否医院管理员
            </summary>
        </member>
        <member name="F:ABegin.Debug._sContents">
            <summary>
            当前菜单目录信息
            </summary>
        </member>
        <member name="F:ABegin.Debug._bOpenShortcutMenu">
            <summary>
            是否开启快捷键功能
            </summary>
        </member>
        <member name="F:ABegin.Debug._DebugText">
            <summary>
            调试文本
            </summary>
        </member>
        <member name="F:ABegin.Debug._isLoging">
            <summary>
            是否正在登录
            </summary>
        </member>
        <member name="F:ABegin.Debug._isUpdateing">
            <summary>
            当前系统是否正在升级
            </summary>
        </member>
        <member name="F:ABegin.Debug.client">
            <summary>
            debug tcp
            </summary>
        </member>
        <member name="M:ABegin.Debug._InitDebug">
            <summary>
            连接AHCDebugView
            </summary>
        </member>
        <member name="M:ABegin.Debug.SendDebug(System.String,ANetAccess.TSQLPara)">
            <summary>
            将文本类型和vsText输出到AHCDebugView中。
            </summary>
            <param name="veType">发送类型</param>
            <param name="vsText">文本内容</param>
            <param name="vxParaList">可执行参数</param>
        </member>
        <member name="M:ABegin.Debug._ExitDebug">
            <summary>
            断开与AHCDebugView的连接
            </summary>
        </member>
        <member name="M:ABegin.Debug.IsDebugMode">
            <summary>
            返回调试状态:返回_bIsDebug的值，用于判断是否处于调试模式
            </summary>
        </member>
        <member name="M:ABegin.Debug._SaveDebugLog(System.String,System.Boolean)">
            <summary>
            将调试信息（日志）保存到本机DebugLogs目录下
            </summary>
            <param name="vsTextLog"></param>
            <param name="vbSaveScreen"></param>
        </member>
        <member name="T:ABegin.ModuleManage">
            <summary>
            模块菜单登记管理
            </summary>
        </member>
        <member name="F:ABegin.ModuleManage.fbLinkclose">
            <summary>
            是否允许注册验证失败后退出系统
            </summary>
        </member>
        <member name="F:ABegin.ModuleManage.listExtension">
            <summary>
            扩展组件注册菜单
            </summary>
        </member>
        <member name="F:ABegin.ModuleManage.interReg">
            <summary>
            
            </summary>
        </member>
        <member name="F:ABegin.ModuleManage.listRegModual_All">
            <summary>
            全部注册模块
            </summary>
        </member>
        <member name="F:ABegin.ModuleManage.listRegModual">
            <summary>
            已注册模块
            </summary>
        </member>
        <member name="F:ABegin.ModuleManage.listModelUsing">
            <summary>
            正在使用的模块信息,退出的时候需要释放
            </summary>
        </member>
        <member name="F:ABegin.ModuleManage.listRegisterMenus">
            <summary>
            已注册菜单
            </summary>
        </member>
        <member name="F:ABegin.ModuleManage.listModules">
            <summary>
            模块菜单列表
            </summary>
        </member>
        <member name="M:ABegin.ModuleManage.InitMenu">
            <summary>
            初始化菜单项
            </summary>
        </member>
        <member name="M:ABegin.ModuleManage.GetAllModel">
            <summary>
            获取系统所有已登记模块
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.ModuleManage.LoadRegModel">
            <summary>
            加载验证通过的模块
            </summary>
        </member>
        <member name="M:ABegin.ModuleManage.LoadRegModelAll">
            <summary>
            加载验证所有的模块
            </summary>
        </member>
        <member name="M:ABegin.ModuleManage.InitClose">
            <summary>
            初始化注册关闭退出事件,在注册验证失败的时候触发
            </summary>
        </member>
        <member name="M:ABegin.ModuleManage.interReg_LinkClose(System.String@)">
            <summary>
            实现注册关闭事件
            </summary>
            <param name="vsErr"></param>
        </member>
        <member name="M:ABegin.ModuleManage.GetRegisterModule">
            <summary>
            获取当前已注册的模块
            </summary>
            <returns>已注册的模块信息</returns>
        </member>
        <member name="M:ABegin.ModuleManage.SetRegisterModule">
            <summary>
            设置获取注册菜单信息
            </summary>
        </member>
        <member name="M:ABegin.ModuleManage.RegMenu(System.String)">
            <summary>
            验证当前菜单是否注册
            </summary>
            <param name="vsNum">菜单编码</param>
            <returns>是否注册</returns>
        </member>
        <member name="M:ABegin.ModuleManage.AddExtensionMenus(System.String,System.String)">
            <summary>
            添加扩展组件模块
            </summary>
            <param name="code"></param>
            <param name="num"></param>
        </member>
        <member name="M:ABegin.ModuleManage.GetModuleByMenuNum(System.String)">
            <summary>
            根据菜单编码获取模块编码
            </summary>
            <param name="vsMenuNum"></param>
            <returns></returns>
        </member>
        <member name="F:ABegin.FLockSystem_Config.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.FLockSystem_Config.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.FLockSystem_Config.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ABegin.BeginForm.F升级记录查看新">
            <summary>
            软件升级记录查看
            </summary>
        </member>
        <member name="F:ABegin.BeginForm.F升级记录查看新.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.BeginForm.F升级记录查看新.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.BeginForm.F升级记录查看新.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ABegin.BeginForm.F升级记录查看新.list日期">
            <summary>
            按日期统计
            </summary>
        </member>
        <member name="F:ABegin.BeginForm.F升级记录查看新.list模块">
            <summary>
            按模块统计
            </summary>
        </member>
        <member name="F:ABegin.FRuleList.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.FRuleList.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.FRuleList.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ABegin.TAttribItem">
            <summary>
            用地TNameValueList中的项 已停用
            </summary>
        </member>
        <member name="T:ABegin.TNameValueList">
            <summary>
            专用于ASubEdit编辑的
            </summary>
        </member>
        <member name="M:ABegin.TNameValueList.AddItem(System.String,System.String)">
            <summary>
            加入属性值对
            </summary>
            <param name="vsName">名称</param>
            <param name="vsValue">值</param>
        </member>
        <member name="M:ABegin.TNameValueList.Clear">
            <summary>
            清空列表
            </summary>
        </member>
        <member name="M:ABegin.TNameValueList.GetValue(System.String)">
            <summary>
            获取值
            </summary>
            <param name="vsName"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.TNameValueList.GetItem(System.String)">
            <summary>
            获取项目对象
            </summary>
            <param name="vsName"></param>
            <returns></returns>
        </member>
        <member name="F:ABegin.FChangePWD.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.FChangePWD.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.FChangePWD.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ABegin.FSelectRole">
            <summary>
            启用单角色登录的时候，切换系统登录角色
            </summary>
        </member>
        <member name="F:ABegin.FSelectRole.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.FSelectRole.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.FSelectRole.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ABegin.FWait.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.FWait.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.FWait.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ABegin.DateClass">
            <summary>
            年龄信息
            </summary>
        </member>
        <member name="F:ABegin.DateClass.fdBirDate">
            <summary>
            出生日期
            </summary>
        </member>
        <member name="F:ABegin.DateClass.fiYear">
            <summary>
            年-岁
            </summary>
        </member>
        <member name="F:ABegin.DateClass.fiMonth">
            <summary>
            月
            </summary>
        </member>
        <member name="F:ABegin.DateClass.fiDay">
            <summary>
            天
            </summary>
        </member>
        <member name="F:ABegin.DateClass.fiHour">
            <summary>
            时
            </summary>
        </member>
        <member name="F:ABegin.DateClass.fiMin">
            <summary>
            分
            </summary>
        </member>
        <member name="T:ABegin.DBXmlColumn">
            <summary>
            创建XML字段明细信息
            </summary>
        </member>
        <member name="F:ABegin.DBXmlColumn.fsName">
            <summary>
            字段名称
            </summary>
        </member>
        <member name="F:ABegin.DBXmlColumn.fsValue">
            <summary>
            字段值
            </summary>
        </member>
        <member name="F:ABegin.DBXmlColumn.fsType">
            <summary>
            字段类型
            </summary>
        </member>
        <member name="M:ABegin.DBXmlColumn.#ctor(System.String,System.Object)">
            <summary>
            初始化字段信息
            </summary>
            <param name="vsName">字段名称</param>
            <param name="vsVal">字段值</param>
        </member>
        <member name="M:ABegin.DBXmlColumn.#ctor(System.String,System.Object,System.String)">
            <summary>
            初始化字段信息
            </summary>
            <param name="vsName">字段名称</param>
            <param name="vsVal">字段值</param>
            <param name="vsType">字段类型</param>
        </member>
        <member name="F:ABegin.ALoginUser.va员工属性">
            <summary>
            员工属性
            </summary>
        </member>
        <member name="F:ABegin.ALoginUser.va隶属科室">
            <summary>
            隶属科室
            </summary>
        </member>
        <member name="T:ABegin.EMealType">
            <summary>
            标准版类型
            </summary>
        </member>
        <member name="T:ABegin.PrintClass">
            <summary>
            打印格式信息
            </summary>
        </member>
        <member name="F:ABegin.PrintClass.fs系统序号">
            <summary>
            打印格式系统序号
            </summary>
        </member>
        <member name="F:ABegin.PrintClass.fs格式名称">
            <summary>
            打印格式名称
            </summary>
        </member>
        <member name="F:ABegin.PrintClass.fs格式内容">
            <summary>
            打印格式内容
            </summary>
        </member>
        <member name="F:ABegin.PrintClass.fs格式编号">
            <summary>
            打印格式编号
            </summary>
        </member>
        <member name="T:ABegin.InputLanageClass">
            <summary>
            输入法记忆信息
            </summary>
        </member>
        <member name="F:ABegin.InputLanageClass.fs记忆内容">
            <summary>
            输入法记忆内容
            </summary>
        </member>
        <member name="F:ABegin.InputLanageClass.fb个人">
            <summary>
            输入法设置是否为个人
            </summary>
        </member>
        <member name="T:ABegin.APerInfo">
            <summary>
            权限明细信息,包含权限名称、描述等
            </summary>
        </member>
        <member name="F:ABegin.APerInfo.fsName">
            <summary>
            权限名称
            </summary>
        </member>
        <member name="F:ABegin.APerInfo.fsRemark">
            <summary>
            权限描述
            </summary>
        </member>
        <member name="F:ABegin.APerInfo.fbPer">
            <summary>
            是否有此权限
            </summary>
        </member>
        <member name="T:ABegin.AParaInfo">
            <summary>
            参数明细信息，包含参数标题等信息
            </summary>
        </member>
        <member name="F:ABegin.AParaInfo.fsTitle">
            <summary>
            参数标题
            </summary>
        </member>
        <member name="F:ABegin.AParaInfo.fsValue">
            <summary>
            参数值
            </summary>
        </member>
        <member name="F:ABegin.AParaInfo.fsSource">
            <summary>
            参数来源
            </summary>
        </member>
        <member name="F:ABegin.AParaInfo.fsRemark">
            <summary>
            参数描述
            </summary>
        </member>
        <member name="F:ABegin.AParaInfo.fsGetWay">
            <summary>
            采集方式
            </summary>
        </member>
        <member name="M:ABegin.AParaInfo.#ctor">
             <summary>
            初始化参数明细信息
             </summary>
        </member>
        <member name="M:ABegin.AParaInfo.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            初始化参数明细信息
            </summary>
            <param name="sTitle">参数标题</param>
            <param name="sValue">参数值</param>
            <param name="sSource">参数来源</param>
            <param name="sWay">参数采集方式</param>
            <param name="sRemark">参数备注</param>
        </member>
        <member name="T:ABegin.ACustomCmdInfo">
            <summary>
            自定义功能项明细信息-针对菜单下的快捷功能
            </summary>
        </member>
        <member name="F:ABegin.ACustomCmdInfo.fsNo">
            <summary>
            功能编号
            </summary>
        </member>
        <member name="F:ABegin.ACustomCmdInfo.fsParentNo">
            <summary>
            所属菜单编号
            </summary>
        </member>
        <member name="F:ABegin.ACustomCmdInfo.fsName">
            <summary>
            功能名称
            </summary>
        </member>
        <member name="F:ABegin.ACustomCmdInfo.fsRemark">
            <summary>
            备注
            </summary>
        </member>
        <member name="F:ABegin.ACustomCmdInfo.fsCmd">
            <summary>
            快捷按键
            </summary>
        </member>
        <member name="F:ABegin.ACustomCmdInfo.fsUser">
            <summary>
            适用对象n
            </summary>
        </member>
        <member name="F:ABegin.FLoginSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.FLoginSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.FLoginSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:ABegin.AHCInfo.OpenEMR(System.String)">
            <summary>
            调用某位住院病人的电子病历
            </summary>
            <param name="vs住院编号"></param>
        </member>
        <member name="F:ABegin.UI.ASetColor.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:ABegin.UI.ASetColor.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:ABegin.UI.ASetColor.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="M:ABegin.MenuManage.CallDllFun(System.String,System.String,System.String)">
            <summary>
            调用一个DLL中的InterFace.CallFun()函数
            </summary>
            <param name="vsComName"></param>
            <param name="vsFunCmd"></param>
            <param name="vsCaption"></param>
        </member>
        <member name="F:ABegin.F个性设置.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.F个性设置.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.F个性设置.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ABegin.APlugInterFace">
            <summary>
            插件接口控制类
            </summary>
        </member>
        <member name="M:ABegin.APlugInterFace.OnOpenForm_Before(AModelList.AForm,System.String)">
            <summary>
            窗口打开之前调用，窗口插件接收此操作
            </summary>
            <param name="form">当前打开的窗口</param>
            <param name="cmd">当前窗口执行的操作，如新增、修改</param>
            <returns>返回true继续打开，返回false停止打开</returns>
        </member>
        <member name="M:ABegin.APlugInterFace.OnOpenForm_After(AModelList.AForm,System.String,System.String)">
            <summary>
            窗口打开之后调用，窗口插件接收此操作
            </summary>
            <param name="form">当前打开的窗口</param>
            <param name="cmd">当前窗口执行的操作，如新增、修改</param>
            <param name="id">当前主表序号</param>
        </member>
        <member name="M:ABegin.APlugInterFace.OnCloseForm(AModelList.AForm,System.String)">
            <summary>
            窗口关闭之前调用，窗口插件接收此操作
            </summary>
            <param name="form">当前关闭的窗口</param>
            <param name="cmd">当前窗口执行的操作，如新增、修改</param>
            <returns>true继续关闭，false停止关闭</returns>
        </member>
        <member name="M:ABegin.APlugInterFace.OnCmdForm_Before(AModelList.AForm,System.String,System.String)">
            <summary>
            窗口执行功能业务操作之前调用，如保存之前，窗口插件接收此操作
            </summary>
            <param name="form">当前执行业务操作的窗口</param>
            <param name="cmd">当前执行的操作</param>
            <param name="id">当前主表序号</param>
            <returns>true继续保存，false停止保存</returns>
        </member>
        <member name="M:ABegin.APlugInterFace.OnCmdForm_After(AModelList.AForm,System.String,System.String)">
            <summary>
            窗口执行功能业务操作之后调用，如保存之后，窗口插件接收此操作
            </summary>
            <param name="form">当前执行业务操作的窗口</param>
            <param name="id">当前主表序号</param>
            <param name="cmd">当前执行的操作</param>
        </member>
        <member name="F:ABegin.F主窗口.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.F主窗口.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.F主窗口.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ABegin.F主窗口.listMenuFirst">
            <summary>
            一级菜单和坐标
            </summary>
        </member>
        <member name="F:ABegin.F主窗口.listMenuSecond">
            <summary>
            二级菜单和坐标
            </summary>
        </member>
        <member name="F:ABegin.F主窗口.listMenuLeft">
            <summary>
            左侧菜单和坐标
            </summary>
        </member>
        <member name="F:ABegin.F主窗口.leftMenuxf">
            <summary>
            
            </summary>
        </member>
        <member name="F:ABegin.F主窗口.listMenuQuick">
            <summary>
            快捷菜单和坐标
            </summary>
        </member>
        <member name="F:ABegin.F主窗口.listForms">
            <summary>
            导航菜单窗口和坐标
            </summary>；
        </member>
        <member name="F:ABegin.F主窗口.falgReloadScorll">
            <summary>
            
            </summary>
        </member>
        <member name="M:ABegin.F主窗口.AHCClose">
            <summary>
            退出
            </summary>
        </member>
        <member name="M:ABegin.F主窗口.RefreshDepartment">
            <summary>
            刷新登录科室显示信息
            </summary>
        </member>
        <member name="M:ABegin.F主窗口.RefreshLogin">
            <summary>
            刷新登录信息,员工.机构
            </summary>
        </member>
        <member name="T:ABegin.BJCA">
            <summary>
            CA认证支持厂家-BJCA
            </summary>
        </member>
        <member name="F:ABegin.BJCA.axAnySignInterface1">
            <summary>
            信手书
            </summary>
        </member>
        <member name="F:ABegin.BJCA._certEntity">
            <summary>
            
            </summary>
        </member>
        <member name="F:ABegin.BJCA.bjTs">
            <summary>
            TS对象
            </summary>
        </member>
        <member name="F:ABegin.BJCA.strCertID">
            <summary>
            证书唯一ID
            </summary>
        </member>
        <member name="F:ABegin.BJCA.aEnable">
            <summary>
            当前签名认证是否启用
            </summary>
        </member>
        <member name="F:ABegin.BJCA.listTypes">
            <summary>
            注册类型
            </summary>
        </member>
        <member name="F:ABegin.BJCA.aCAType">
            <summary>
            接入厂商
            </summary>
        </member>
        <member name="M:ABegin.BJCA.Init">
            <summary>
            初始化CA信息
            </summary>
        </member>
        <member name="M:ABegin.BJCA.Login">
            <summary>
            登录验证
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.BJCA.CASignData(System.String,System.String,System.String)">
            <summary>
            平台数据签名
            </summary>
            <param name="type"></param>
            <param name="typeId"></param>
            <param name="inputData"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.BJCA.CAVerifySignData(System.String,System.String)">
            <summary>
            验证数据
            </summary>
            <param name="signId"></param>
            <param name="signData"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.BJCA.CAVerifySignHandBook(System.String,System.String)">
            <summary>
            验证数据
            </summary>
            <param name="signId"></param>
            <param name="signData"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.BJCA.SignData(System.String)">
            <summary>
            数据签名
            </summary>
            <param name="inputData">需要签名的数据</param>
            <returns></returns>
        </member>
        <member name="M:ABegin.BJCA.CreateTime(System.String)">
            <summary>
            加盖时间戳
            </summary>
            <param name="inputData">要加盖时间戳的数据</param>
            <returns>时间戳</returns>
        </member>
        <member name="M:ABegin.BJCA.UserCert">
            <summary>
            获取证书
            </summary>
            <returns>证书数据</returns>
        </member>
        <member name="M:ABegin.BJCA.CABind">
            <summary>
            绑定证书
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.BJCA.CAAuth(System.String)">
            <summary>
            指定用户CA认证
            </summary>
            <param name="userid">用户序号</param>
            <returns>认证信息,null表示取消认证或认证失败</returns>
        </member>
        <member name="T:ABegin.User">
            <summary>
            用户中心数据仓库类 平台内部使用
            </summary>
        </member>
        <member name="F:ABegin.User._iUserId">
            <summary>
            当前登录员工序号,平台内部使用,外部使用请使用Fun.Get
            </summary>
        </member>
        <member name="F:ABegin.User._sUserCode">
            <summary>
            当前登录员工编码,平台内部使用,外部使用请使用Fun.Get
            </summary>
        </member>
        <member name="F:ABegin.User._sUserName">
            <summary>
            当前登录员工名称,平台内部使用,外部使用请使用Fun.Get
            </summary>
        </member>
        <member name="F:ABegin.User._sPwd">
            <summary>
            当前登录员工口令-已加密,平台内部使用,外部使用请使用Fun.Get
            </summary>
        </member>
        <member name="F:ABegin.User._iOrgId">
            <summary>
            当前登录机构序号,平台内部使用,外部使用请使用Fun.Get
            </summary>
        </member>
        <member name="F:ABegin.User._iOrgName">
            <summary>
            当前登录机构名称,平台内部使用,外部使用请使用Fun.Get
            </summary>
        </member>
        <member name="F:ABegin.User._iOrgNameExtend">
            <summary>
            当前登录机构扩展名称,平台内部使用,外部使用请使用Fun.Get
            </summary>
        </member>
        <member name="F:ABegin.User._iDepartId">
            <summary>
            当前登录机构ID,平台内部使用,外部使用请使用Fun.Get
            </summary>
        </member>
        <member name="F:ABegin.User._sDepartName">
            <summary>
            当前登录机构名称,平台内部使用,外部使用请使用Fun.Get
            </summary>
        </member>
        <member name="M:ABegin.User._ChangedPWD(System.Int64)">
            <summary>
            修改指定用户密码,默认当前用户
            </summary>
            <param name="vlUserId"></param>
        </member>
        <member name="M:ABegin.User._ChangedPWD(System.String)">
            <summary>
            修改用户密码
            </summary>
            <param name="defaultPwd"></param>
            <returns></returns>
        </member>
        <member name="T:ABegin.Program">
            <summary>
            平台系统入口
            </summary>
        </member>
        <member name="M:ABegin.Program._TheEnd">
            <summary>
            系统结束，释放资源
            </summary>
        </member>
        <member name="M:ABegin.Program.UpdateSetup">
            <summary>
            更新种子程序，移动位置即可
            </summary>
        </member>
        <member name="M:ABegin.Program.EndCEF">
            <summary>
            CEF浏览器释放,需要外包一层，否则会出现组件不存在问题
            </summary>
        </member>
        <member name="M:ABegin.Program._EndCEF">
            <summary>
            CEF浏览器释放
            </summary>
        </member>
        <member name="M:ABegin.Program.InitCEF">
            <summary>
            初始化CEF浏览器框架
            </summary>
        </member>
        <member name="M:ABegin.Program.Application_ThreadException(System.Object,System.Threading.ThreadExceptionEventArgs)">
            <summary>
            系统未处理的异常拦截处理-UI线程异常
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ABegin.Program._CreateDesktopLnk_Local">
            <summary>
            创建桌面快捷图标,本地断网收费系统
            </summary>
        </member>
        <member name="M:ABegin.Program.CreateDesktopLnk_Local">
            <summary>
            创建桌面快捷图标,本地断网收费系统
            </summary>
        </member>
        <member name="M:ABegin.Program._CreateDesktopLnk">
            <summary>
            创建桌面快捷图标，云疗版平台系统
            </summary>
        </member>
        <member name="M:ABegin.Program.CreateDesktopLnk">
            <summary>
             创建桌面快捷图标，云疗版平台系统
            </summary>
        </member>
        <member name="M:ABegin.Program.CurrentDomain_UnhandledException(System.Object,System.UnhandledExceptionEventArgs)">
            <summary>
            系统未处理的异常拦截处理-非UI线程异常
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ABegin.Program.CastMessage(System.Exception)">
            <summary>
            转换错误提示信息
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Program.GetExceptionMsg(System.Exception,System.String,System.Int32)">
            <summary>  
            生成自定义异常消息  
            </summary>  
            <param name="ex">异常对象</param>  
            <param name="backStr">备用异常消息：当ex为null时有效</param>  
            <returns>异常字符串文本</returns>  
        </member>
        <member name="T:ABegin.IDCardRead">
            <summary>
            系统身份证读卡管理
            </summary>
        </member>
        <member name="M:ABegin.IDCardRead.Read">
            <summary>
            读取身份证，根据系统参数配置
            </summary>
            <returns></returns>
        </member>
        <member name="T:ABegin.AHCMessage">
            <summary>
            AHC消息管理类
            </summary>
        </member>
        <member name="F:ABegin.AHCMessage.clientMessage">
            <summary>
            TCP连接对象
            </summary>
        </member>
        <member name="F:ABegin.AHCMessage.TCPKEY">
            <summary>
            终端连接KEy
            </summary>
        </member>
        <member name="F:ABegin.AHCMessage.iConnectCount">
            <summary>
            重连次数
            </summary>
        </member>
        <member name="F:ABegin.AHCMessage.abConnect">
            <summary>
            当前是否初始化连接
            </summary>
        </member>
        <member name="M:ABegin.AHCMessage.Init">
            <summary>
            初始化消息连接
            </summary>
        </member>
        <member name="M:ABegin.AHCMessage.acceptCallback(System.IAsyncResult)">
            <summary>
            接收委托回调消息
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:ABegin.AHCMessage.Login">
            <summary>          
            操作员登录
            </summary>
        </member>
        <member name="M:ABegin.AHCMessage.UpdateLogin">
            <summary>
            更新登录信息
            </summary>
        </member>
        <member name="M:ABegin.AHCMessage.Exit">
            <summary>
            退出
            </summary>
        </member>
        <member name="M:ABegin.AHCMessage.GetMessage(System.String)">
            <summary>
            获取消息
            </summary>
            <param name="type">消息类型</param>
        </member>
        <member name="M:ABegin.AHCMessage.GetMessage">
            <summary>
            获取消息
            </summary>
        </member>
        <member name="M:ABegin.AHCMessage.LoginQT_U">
            <summary>
            用户退出
            </summary>
        </member>
        <member name="M:ABegin.AHCMessage.LoginQT_C">
            <summary>
            终端退出
            </summary>
        </member>
        <member name="M:ABegin.AHCMessage.SendMessae(System.String)">
            <summary>
            发送消息
            </summary>
            <param name="msg">要发送的文本</param>
            <returns>是否发送成功</returns>
        </member>
        <member name="T:ABegin.AHCMessage._OnMessage">
            <summary>
            消息回调
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:ABegin.CheckComputerFreeState.GetLastInputTime">
            <summary>
            获取键盘和鼠标没有操作的时间
            </summary>
            <returns>用户上次使用系统到现在的时间间隔，单位为秒</returns>
        </member>
        <member name="T:ABegin.CheckComputerFreeState.LASTINPUTINFO">
            <summary>
            创建结构体用于返回捕获时间
            </summary>
        </member>
        <member name="F:ABegin.CheckComputerFreeState.LASTINPUTINFO.cbSize">
            <summary>
            设置结构体块容量
            </summary>
        </member>
        <member name="F:ABegin.CheckComputerFreeState.LASTINPUTINFO.dwTime">
            <summary>
            抓获的时间
            </summary>
        </member>
        <member name="T:ABegin.ImageInfo">
            <summary>
            图标资源库
            </summary>
        </member>
        <member name="T:ABegin.FMsgList">
            <summary>
            未读系统通知显示-系统右下角
            </summary>
        </member>
        <member name="F:ABegin.FMsgList.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.FMsgList.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.FMsgList.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ABegin.FMessageInfo">
            <summary>
            系统公告信息显示
            </summary>
        </member>
        <member name="F:ABegin.FMessageInfo.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.FMessageInfo.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.FMessageInfo.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ABegin.ASynData">
            <summary>
            同步序号缓存数据管理
            </summary>
        </member>
        <member name="F:ABegin.ASynData.listSynData">
            <summary>
            当前缓存数据
            </summary>
        </member>
        <member name="M:ABegin.ASynData.SetSynNo(System.String)">
            <summary>
             设置缓存数据的同步序号，+1
            </summary>
            <param name="vsSysID">缓存ID，多个使用,分割</param>
        </member>
        <member name="M:ABegin.ASynData.Init">
            <summary>
            初始化缓存信息
            </summary>
        </member>
        <member name="M:ABegin.ASynData.SetSysData(ABegin.ASynDataInfo,System.String)">
            <summary>
            设置缓存信息
            </summary>
            <param name="sysData">缓存数据源</param>
            <param name="path">本地存储路径</param>
        </member>
        <member name="M:ABegin.ASynData.GetSysData(ABegin.ESynType,System.String,System.String,System.Int64,System.Int64,System.Int64,System.Int64,ANetAccess.TSQLPara)">
            <summary>
            获取缓存信息
            </summary>
            <param name="sysType">缓存方式</param>
            <param name="vsSqlText">SQL Or XML</param>
            <param name="vsSysID">序号</param>
            <param name="viOrgID">机构序号</param>
            <param name="viUserID">操作员序号</param>
            <param name="viDepentID">科室序号</param>
            <param name="viClientID">终端序号</param>
            <param name="tsqlPara">SQL参数</param>
            <returns>和SQL XML 对应的数据结果集</returns>
        </member>
        <member name="T:ABegin.ASynDataInfo">
            <summary>
            数据信息
            </summary>
        </member>
        <member name="F:ABegin.ASynDataInfo.fsSysNo">
            <summary>
            同步序号 标识当前数据是否已经被更新，同步序号不相同则表示已经更新，需要重新获取数据
            
            </summary>
        </member>
        <member name="F:ABegin.ASynDataInfo.fsSysID">
            <summary>
            数据ID，唯一序号
            </summary>
        </member>
        <member name="F:ABegin.ASynDataInfo.dt">
            <summary>
            数据源
            </summary>
        </member>
        <member name="T:ABegin.GData">
            <summary>
            系统功能数据管理类
            </summary>
        </member>
        <member name="F:ABegin.GData.licname">
            <summary>
            内部授权用户
            </summary>
        </member>
        <member name="F:ABegin.GData.licpwd">
            <summary>
            内部授权口令
            </summary>
        </member>
        <member name="F:ABegin.GData.sHosInfos">
            <summary>
            当前医院信息
            </summary>
        </member>
        <member name="F:ABegin.GData.sDepInfos">
            <summary>
            当前科室信息
            </summary>
        </member>
        <member name="F:ABegin.GData.sSubSystemCode">
            <summary>
            子系统编码 已停用
            </summary>
        </member>
        <member name="F:ABegin.GData.sBuyUserName">
            <summary>
            注册用户名称
            </summary>
        </member>
        <member name="F:ABegin.GData.sSubSystemFile">
            <summary>
            子系统启动文件名 已停用
            </summary>
        </member>
        <member name="F:ABegin.GData.listMenuVisible">
            <summary>
            自定义显示或影藏的菜单
            </summary>
        </member>
        <member name="F:ABegin.GData.i平台后台版本号">
            <summary>
            平台后台版本号,已停用
            </summary>
        </member>
        <member name="F:ABegin.GData.i子系统后台版本号">
            <summary>
            子系统后台版本号 已停用
            </summary>
        </member>
        <member name="F:ABegin.GData.bSelectLinkAll">
            <summary>
            是否全模糊检测
            </summary>
        </member>
        <member name="F:ABegin.GData.sMenuPerXml">
            <summary>
            医院管理员 菜单授权信息
            </summary>
        </member>
        <member name="F:ABegin.GData.fbAutoRefresh">
            <summary>
            是否自动刷新连接数据库
            </summary>
        </member>
        <member name="F:ABegin.GData.listCustomPer">
            <summary>
            当前已授权自定义权限列表
            </summary>
        </member>
        <member name="F:ABegin.GData.listCustomPer_Custom">
            <summary>
            当前已授权自定义权限列表——自定义
            </summary>
        </member>
        <member name="F:ABegin.GData.sCmdVarsText">
            <summary>
            已停用
            </summary>
        </member>
        <member name="F:ABegin.GData.frmMain">
            <summary>
            系统登录主界面
            </summary>
        </member>
        <member name="F:ABegin.GData.frmLoginState">
            <summary>
            登录状态提醒界面，用于医疗保险接口初始化提醒
            </summary>
        </member>
        <member name="F:ABegin.GData.fLogin">
            <summary>
            登录界面
            </summary>
        </member>
        <member name="F:ABegin.GData.bRunning">
            <summary>
            系统是否正在运行
            </summary>
        </member>
        <member name="F:ABegin.GData.lClientId">
            <summary>
            终端ID
            </summary>
        </member>
        <member name="F:ABegin.GData.sClientName">
            <summary>
            终端名称
            </summary>
        </member>
        <member name="F:ABegin.GData.fsPrintXml">
            <summary>
            当前在执行的打印格式信息
            </summary>
        </member>
        <member name="F:ABegin.GData.fbPrintByLast">
            <summary>
            是否获取使用上一次的打印格式信息
            </summary>
        </member>
        <member name="F:ABegin.GData.tLoginTime">
            <summary>
            登录时间
            </summary>
        </member>
        <member name="F:ABegin.GData.tClientCustomList">
            <summary>
              停用
            </summary>
        </member>
        <member name="F:ABegin.GData.tUserCustomList">
            <summary>
            停用
            </summary>
        </member>
        <member name="F:ABegin.GData.list组件列表">
            <summary>
            当前系统可用组件列表
            </summary>
        </member>
        <member name="F:ABegin.GData.list权限列表">
            <summary>
            当前授权权限列表
            </summary>
        </member>
        <member name="F:ABegin.GData.list权限列表_Custom">
            <summary>
            当前授权权限列表-自定义
            </summary>
        </member>
        <member name="F:ABegin.GData.listMenu">
            <summary>
            当前授权菜单信息
            </summary>
        </member>
        <member name="F:ABegin.GData.listQuickMenu">
            <summary>
            当前授权快捷菜单信息
            </summary>
        </member>
        <member name="F:ABegin.GData.fs当前菜单名称">
            <summary>
            当前执行的菜单名称
            </summary>
        </member>
        <member name="F:ABegin.GData.fb重新登录">
            <summary>
            当前是否在执行重新登录
            </summary>
        </member>
        <member name="F:ABegin.GData.fb启用短信平台">
            <summary>
            是否启用短信平台 停用
            </summary>
        </member>
        <member name="F:ABegin.GData.fsSystemModel">
            <summary>
            当前系统的模式 停用
            </summary>
        </member>
        <member name="F:ABegin.GData.fTipsInfo">
            <summary>
            当前状态栏提示信息
            </summary>
        </member>
        <member name="F:ABegin.GData.listInput">
            <summary>
            当前输入法记忆信息
            </summary>
        </member>
        <member name="F:ABegin.GData.listCacheData">
            <summary>
            当前系统缓存数据
            </summary>
        </member>
        <member name="F:ABegin.GData.fsFormText">
            <summary>
            当前打开窗口名称
            </summary>
        </member>
        <member name="F:ABegin.GData.fmMenuClass">
            <summary>
            当前点击菜单明细信息
            </summary>
        </member>
        <member name="F:ABegin.GData.fbMenuClick">
            <summary>
            当前是否是点击菜单的事件
            </summary>
        </member>
        <member name="F:ABegin.GData.fbLisenter">
            <summary>
            监听消息是否启动
            </summary>
        </member>
        <member name="F:ABegin.GData.flFromLisenter">
            <summary>
            当前已注册要监听消息的窗口
            </summary>
        </member>
        <member name="F:ABegin.GData.flModuleReg_Custom">
            <summary>
            模块是否注册列表
            </summary>
        </member>
        <member name="F:ABegin.GData.vi端口1">
            <summary>
            文件消息服务端口1
            </summary>
        </member>
        <member name="F:ABegin.GData.vi端口2">
            <summary>
            文件消息服务端口2
            </summary>
        </member>
        <member name="F:ABegin.GData.vi端口3">
            <summary>
            文件消息服务端口3
            </summary>
        </member>
        <member name="F:ABegin.GData.vi端口4">
            <summary>
            文件消息服务端口4
            </summary>
        </member>
        <member name="F:ABegin.GData.fbInitClient">
            <summary>
            当前客户端连接是否初始化成功
            </summary>
        </member>
        <member name="F:ABegin.GData.dtLastUseDate">
            <summary>
            最后一次使用系统的时间
            </summary>
        </member>
        <member name="F:ABegin.GData.fbLocked">
            <summary>
            当前系统是否已经锁定Ctrl+L
            </summary>
        </member>
        <member name="F:ABegin.GData.dictList接口菜单序号">
            <summary>
            自定义医保接口菜单集合，用于菜单定位
            </summary>
        </member>
        <member name="F:ABegin.GData.listUpdateCustomPer">
            <summary>
            当前升级过程需要更新的角色权限信息
            </summary>
        </member>
        <member name="F:ABegin.GData.fs当前接口序号">
            <summary>
            当前添加菜单的接口序号
            </summary>
        </member>
        <member name="F:ABegin.GData.fbMsgShow">
            <summary>
            当前医院通知消息框是否已打开
            </summary>
        </member>
        <member name="F:ABegin.GData.fsRoleName">
            <summary>
            当前登录使用的角色名称-启用角色登录的情况下
            </summary>
        </member>
        <member name="F:ABegin.GData.fsRoleId">
            <summary>
            当前登录使用的角色ID-启用角色登录的情况下
            </summary>
        </member>
        <member name="F:ABegin.GData.fbMsgInfo">
            <summary>
            当前查看医院通知消息框是否已经打开
            </summary>
        </member>
        <member name="F:ABegin.GData.fiDefaultLockTime">
            <summary>
            系统默认锁定超时时间 单位(分钟)
            </summary>
        </member>
        <member name="F:ABegin.GData.fbMainFormClose">
            <summary>
            是否允许关闭主窗口 停用
            </summary>
        </member>
        <member name="F:ABegin.GData.listMenuManage">
            <summary>
            快捷键菜单信息，菜单编码-快捷键
            </summary>
        </member>
        <member name="F:ABegin.GData.fbShowForm">
            <summary>
            当前是否是弹出式窗口
            </summary>
        </member>
        <member name="F:ABegin.GData.fsLoginID">
            <summary>
            登录ID  停用
            </summary>
        </member>
        <member name="F:ABegin.GData.fsModuelInfo">
            <summary>
            当前登录使用的模块信息
            </summary>
        </member>
        <member name="F:ABegin.GData.flRoleList">
            <summary>
            当前操作员授权的角色列表
            </summary>
        </member>
        <member name="F:ABegin.GData.fbLocalServer">
            <summary>
            当前是否是断网缓存模式，是否连接本地SqlServer服务
            </summary>
        </member>
        <member name="F:ABegin.GData.fbNewCardModel">
            <summary>
            是否新刷卡模式
            </summary>
        </member>
        <member name="F:ABegin.GData.eMealModel">
            <summary>
            是标准版的情况下，当前标准版的版本类型
            </summary>
        </member>
        <member name="F:ABegin.GData._PrivateHos">
            <summary>
            标准版模式下，是否是民营医院
            </summary>
        </member>
        <member name="F:ABegin.GData._ChengDuHos">
            <summary>
            标准版模式下，是否是成都地区医院
            </summary>
        </member>
        <member name="F:ABegin.GData._UnReadMsgCount">
            <summary>
            当前未读升级记录条数
            </summary>
        </member>
        <member name="F:ABegin.GData._ActiveForm">
            <summary>
            当前活动窗口信息
            </summary>
        </member>
        <member name="F:ABegin.GData.CEFInit">
            <summary>
            CEF浏览器是否初始化成功
            </summary>
        </member>
        <member name="F:ABegin.GData.fbHosManager">
            <summary>
            当前是否是多机构的管理员
            </summary>
        </member>
        <member name="F:ABegin.GData.listCustomCmd">
            <summary>
            菜单界面自定义快捷功能键
            </summary>
        </member>
        <member name="F:ABegin.GData.fsServerIP">
            <summary>
            注册服务器IP
            </summary>
        </member>
        <member name="F:ABegin.GData.fsServerID">
            <summary>
            注册服务器硬件编码
            </summary>
        </member>
        <member name="F:ABegin.GData.fsServerRegCode">
            <summary>
            注册编码
            </summary>
        </member>
        <member name="F:ABegin.GData.aLoginUser">
            <summary>
            当前登录用户信息，改变用户的时候要刷新
            </summary>
        </member>
        <member name="F:ABegin.GData.aLoginDepart">
            <summary>
            当前登录科室信息，改变科室的时候要刷新
            </summary>
        </member>
        <member name="F:ABegin.GData.flMessageID">
            <summary>
            当前消息ID序号
            </summary>
        </member>
        <member name="F:ABegin.GData.fsUpdateCodeName">
            <summary>
            当前升级组件名称
            </summary>
        </member>
        <member name="T:ABegin.AHC_InterFace">
            <summary>
            接口框架通用类
            </summary>
        </member>
        <member name="M:ABegin.AHC_InterFace.CallDLLFun(System.String,System.Object[],System.Object@,System.String)">
            <summary>
            根据DLL文件,调用指定的DLL函数
            </summary>
            <param name="vsFunName">函数名称</param>
            <param name="vsFunVarsList">输入参数列表</param>
            <param name="vsResult">函数返回结果</param>
            <param name="vsMethodName">默认调用函数</param>
        </member>
        <member name="M:ABegin.AHC_InterFace.KDo通用列表窗口_准备打开(System.String,System.Object,System.Object)">
            <summary>
            KDo通用列表窗口_准备打开触发
            </summary>
            <param name="vs业务名称">当前列表窗口业务名称,需要唯一</param>
            <param name="pCtrl">窗体对象</param>
            <param name="pCmd">接口控件对象</param>
        </member>
        <member name="M:ABegin.AHC_InterFace.KDo通用列表窗口_接口按钮被点击(System.String,System.Object,System.String)">
            <summary>
            KDo通用列表窗口_接口按钮被点击时候触发
            </summary>
            <param name="vs业务名称">当前列表窗口业务名称,需要唯一</param>
            <param name="pCtrl">窗体对象</param>
            <param name="vsTag">按钮属性</param>
        </member>
        <member name="M:ABegin.AHC_InterFace.IDo健康刷卡后(System.Object,System.Object,System.String,System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ABegin.AHC_InterFace.Get费别ID(System.String)">
            <summary>
            获取费别ID,用户外部接口更新住院患者的费用类别
            </summary>
            <param name="vs费别名称">费用类别名称</param>
            <returns>费用类别ID</returns>
        </member>
        <member name="F:ABegin.FLogin.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ABegin.FLogin.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ABegin.FLogin.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ABegin.FLogin.licname">
            <summary>
            1部链接授权信息
            </summary>
        </member>
        <member name="M:ABegin.FLogin.RemberNum">
            <summary>
            记住工号
            </summary>
        </member>
        <member name="M:ABegin.FLogin.GetNum">
            <summary>
            获取记住的工号
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.FLogin.GetHosInfo">
            <summary>
            获取配置医院编码信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:ABegin.AHCRule">
            <summary>
            平台逻辑校验规则管理类
            </summary>
        </member>
        <member name="F:ABegin.AHCRule.listError">
            <summary>
            当前校验失败的项目
            </summary>
        </member>
        <member name="F:ABegin.AHCRule.FList">
            <summary>
            待校验规则列表
            </summary>
        </member>
        <member name="F:ABegin.AHCRule.pForm">
            <summary>
            当前逻辑校验的窗口
            </summary>
        </member>
        <member name="M:ABegin.AHCRule.Clear">
            <summary>
            清除校验项目
            </summary>
        </member>
        <member name="M:ABegin.AHCRule.AddRule(System.Windows.Forms.Control,System.String,ABegin.RuleType)">
            <summary>
            向Rule板添加信息,若是错误则程序再不能继续
            </summary>
            <param name="pDestCtrl">此逻辑错误关联的对象（单击可定位）,允许为null</param>
            <param name="vsText">显示文本</param>
            <param name="veType">错误/警告/消息</param>
            <returns>当返回False时，应用程序应返回False(停止执行）</returns>
        </member>
        <member name="M:ABegin.AHCRule.GoDestFocus(ACtrllist.AInputBase)">
            <summary>
            设置控件所在焦点，如果控件有分组项的情况下，将选中当前控件所在分组项
            </summary>
            <param name="pDest"></param>
        </member>
        <member name="M:ABegin.AHCRule.FocusCtrl(System.Int32)">
            <summary>
            设置焦点
            </summary>
            <param name="viIdx"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.AHCRule.ShowRule(System.Boolean)">
            <summary>
            显示Rule板，默认情况下是有Error才显示,也可以选择有警告也显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.AHCRule.GetErrorCount">
            <summary>
            获取错误的数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.AHCRule.GetWarningCount">
            <summary>
            获取警告的数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.AHCRule.GetMsgCount">
            <summary>
            获取消息的数量
            </summary>
            <returns></returns>
        </member>
        <member name="T:ABegin.RuleType">
            <summary>
            错误信息类型
            </summary>
        </member>
        <member name="T:ABegin.TItem">
            <summary>
            校验项目
            </summary>
        </member>
        <member name="T:ABegin.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.biggest">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.biggest_click">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.biggest_click_flagship">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.biggest_flagship">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.close">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.close_click">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.close_flagship">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.divider_control">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.divider_control_flagship">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.divider_cross">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.Lock">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.login_btn">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.login_btn_hover">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.login_check">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.login_checked">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.login_close">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.login_close_hover">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.login_password">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.login_password_disable">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.login_password_focus">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.login_small">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.login_small_hover">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.login_user">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.login_user_disabled">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.login_user_focus">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.LOGO">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.logo_11">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.logo_11_flagship">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.logo2">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.Main">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.menuicon_circle">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.menuicon_square">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.minimize">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.minimize_click">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.minimize_click_flagship">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.minimize_flagship">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.more">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.more_click">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.more_click_flagship">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.more_flagship">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.reduction">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.reduction_click">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.reduction_click_flagship">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.reduction_flagship">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.shortcutmenu">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.shortcutmenu_down">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.tabs_close">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.tabs_close_hover">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.tabs_turnleft_hover">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.tabs_turnright_hover">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.tips_error">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.tips_help">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.tips_tips">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.tips_warning">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.turnleft">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.turnleft_disabled">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.turnleft_hover">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.turnright">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.turnright_disabled">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.turnright_hover">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.UnReadMsg">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.三级菜单展开按钮_default">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.三级菜单展开按钮_hover">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.三级菜单收缩按钮_default">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.三级菜单收缩按钮_hover">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.展开_正常">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.展开_焦点">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.进入_正常">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:ABegin.Properties.Resources.进入_焦点">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="T:ABegin.ASCursor">
            <summary>
            游标存储过程XML管理类
            </summary>
        </member>
        <member name="T:ABegin._日期转换">
            <summary>
            农历国历日期相互转化
            </summary>
        </member>
        <member name="M:ABegin._日期转换.ToLunarDate(System.DateTime)">
            <summary> 
            获取对应日期的农历 
            </summary> 
            <param name="vdDateTime">公历日期</param> 
            <returns>阴历日期</returns> 
        </member>
        <member name="M:ABegin._日期转换.GetDateFromLunarDate(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            阴历转阳历
            </summary>
            <param name="year">阴历年</param>
            <param name="month">阴历月</param>
            <param name="day">阴历日</param>
            <param name="IsLeapMonth">是否闰月</param>
        </member>
        <member name="M:ABegin._日期转换.GetLunarNewYearDate(System.Int32)">
            <summary>
            获取指定年份春节当日（正月初一）的阳历日期
            </summary>
            <param name="year">指定的年份</param>
        </member>
        <member name="M:ABegin._日期转换.ToSolarDate(System.DateTime)">
            <summary>
            从阴历转换为阳历
            </summary>
            <param name="date">阴历日期</param>
            <returns>阳历日期</returns>
        </member>
        <member name="T:ABegin.UpdateABegin">
            <summary>
            Abegin脚本升级管理类, 已停用,使用Z公共组件进行代替
            </summary>
        </member>
        <member name="F:ABegin.UpdateABegin.vl当前组件版本">
            <summary>
            当前组件最新版本号
            </summary>
        </member>
        <member name="M:ABegin.UpdateABegin._Update(System.String,System.String)">
            <summary>
            系统组件升级更新
            </summary>
            <param name="vs组件编码">当前组件注册的编码</param>
            <param name="vi原版本号">组件原版本号</param>
            <returns>空:升级成功,非空:失败的信息</returns>
        </member>
        <member name="P:ABegin.UpdateABegin.Vl当前组件版本">
            <summary>
            当前组件最新版本号,此属性用于外部获取
            </summary>
        </member>
        <member name="T:ABegin.Taskex">
            <summary>
            Socket异步处理管理类
            </summary>
        </member>
        <member name="M:ABegin.Taskex.Run(System.Action)">
            <summary>
            将在线程池上运行的指定工作排队，并返回代表该工作的 Task 对象
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Taskex.Run``1(System.Func{``0})">
            <summary>
            将在线程池上运行的指定工作排队，并返回代表该工作的 Task 对象
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="function"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.Taskex.Delay(System.Int32)">
            <summary>
            创建一个在指定的时间间隔后完成的任务
            </summary>
            <param name="milliseconds"></param>
            <returns></returns>
        </member>
        <member name="T:ABegin.系统配置">
            <summary>
            系统配置类，具体实现已转移到AMessage.dll
            </summary>
        </member>
        <member name="M:ABegin.系统配置.InitConfig">
            <summary>
            初始化系统配置信息
            </summary>
        </member>
        <member name="M:ABegin.系统配置.GetSystemType">
            <summary>
            获取系统类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.系统配置.SetSystemType(ABegin.ESystemType)">
            <summary>
            设置系统类型
            </summary>
            <param name="_eSystemType"></param>
        </member>
        <member name="M:ABegin.系统配置.GetLoginBackImage">
            <summary>
            获取登录主界面背景资源
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.系统配置.GetInnerBackImage">
            <summary>
            获取系统主界面背景资源
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.系统配置.GetInnerLeftTips">
            <summary>
            获取左上角提示信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.系统配置.GetCloseTips">
            <summary>
            获取关闭信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.系统配置.GetSystemInfoTips">
            <summary>
            获取系统详细信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:ABegin.ATipsInfo">
            <summary>
            状态栏Tip提示信息
            </summary>
        </member>
        <member name="F:ABegin.ATipsInfo.fsMsg">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="F:ABegin.ATipsInfo.font">
            <summary>
            提示字体
            </summary>
        </member>
        <member name="F:ABegin.ATipsInfo.color">
            <summary>
            文字颜色
            </summary>
        </member>
        <member name="M:ABegin.ATipsInfo.#ctor(System.String)">
            <summary>
            初始化提示信息
            </summary>
            <param name="msg">提示文本</param>
        </member>
        <member name="M:ABegin.ATipsInfo.#ctor(System.String,System.Drawing.Font)">
            <summary>
            初始化提示信息
            </summary>
            <param name="msg">提示文本</param>
            <param name="font">文本字体</param>
        </member>
        <member name="M:ABegin.ATipsInfo.#ctor(System.String,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            初始化提示信息
            </summary>
            <param name="msg">提示文本</param>
            <param name="font">提示字体</param>
            <param name="msgColor">字体颜色</param>
        </member>
        <member name="M:ABegin.ATipsInfo.#ctor(System.String,System.Drawing.Color)">
            <summary>
            初始化提示信息
            </summary>
            <param name="msg">提示文本</param>
            <param name="msgColor">字体颜色</param>
        </member>
        <member name="T:ABegin.ALocalCacheInfo">
            <summary>
            本地缓存信息
            </summary>
        </member>
        <member name="F:ABegin.ALocalCacheInfo.fsComCode">
            <summary>
            缓存组件编码
            </summary>
        </member>
        <member name="F:ABegin.ALocalCacheInfo.fsComItemCode">
            <summary>
            缓存子编码
            </summary>
        </member>
        <member name="F:ABegin.ALocalCacheInfo.fsID">
            <summary>
            缓存ID
            </summary>
        </member>
        <member name="F:ABegin.ALocalCacheInfo.fsNo">
            <summary>
            缓存同步序号
            </summary>
        </member>
        <member name="F:ABegin.ALocalCacheInfo.fsText">
            <summary>
            缓存内容
            </summary>
        </member>
        <member name="F:ABegin.ALocalCacheInfo.fsCharset">
            <summary>
            缓存文本编码方式
            </summary>
        </member>
        <member name="M:ABegin.ALocalCacheInfo.#ctor">
            <summary>
            初始化本地缓存信息
            </summary>
        </member>
        <member name="T:ABegin.AELineModel">
            <summary>
            边框模式
            </summary>
        </member>
        <member name="T:ABegin.AESerchModel">
            <summary>
            诊断查询模式
            </summary>
        </member>
        <member name="T:ABegin.ACustomPer">
            <summary>
            自定义权限编码信息
            </summary>
        </member>
        <member name="F:ABegin.ACustomPer.sMenuCode">
            <summary>
            菜单编码
            </summary>
        </member>
        <member name="F:ABegin.ACustomPer.sPerCode">
            <summary>
            权限编码
            </summary>
        </member>
        <member name="M:ABegin.ACustomPer.#ctor(System.String,System.String)">
            <summary>
            自定义权限编码信息
            </summary>
            <param name="sMenuCode">菜单编码</param>
            <param name="sPerCode">权限编码</param>
        </member>
        <member name="T:ABegin.ASelectTCM">
            <summary>
            中医诊断
            </summary>
        </member>
        <member name="F:ABegin.ASelectTCM.fs证候编码">
            <summary>
            证候编码，多个编码以;分割
            </summary>
        </member>
        <member name="F:ABegin.ASelectTCM.fs病证编码">
            <summary>
            诊断编码,多个编码以;分割
            </summary>
        </member>
        <member name="F:ABegin.ASelectTCM.fs病证序号">
            <summary>
            病证序号,多个序号以;分割
            </summary>
        </member>
        <member name="F:ABegin.ASelectTCM.fs证候序号">
            <summary>
            证候序号,多个序号以;分割
            </summary>
        </member>
        <member name="F:ABegin.ASelectTCM.fs诊断名称">
            <summary>
            诊断名称,多个诊断以;分割
            </summary>
        </member>
        <member name="F:ABegin.ASelectTCM.fs默认类型">
            <summary>
            1:收藏;2全部
            </summary>
        </member>
        <member name="T:ABegin.ASelectICD">
            <summary>
            ICD选择
            </summary>
        </member>
        <member name="F:ABegin.ASelectICD.viSysID">
            <summary>
            选择的ICD系统序号，多个诊断以;分割
            </summary>
        </member>
        <member name="F:ABegin.ASelectICD.vsICDCode">
            <summary>
            选择的ICD编码，多个诊断以;分割
            </summary>
        </member>
        <member name="F:ABegin.ASelectICD.vsICDName">
            <summary>
            选择的ICD名称，多个诊断以;分割
            </summary>
        </member>
        <member name="F:ABegin.ASelectICD.vsType">
            <summary>
            选择的诊断类型：1:西医;3:手术
            </summary>
        </member>
        <member name="F:ABegin.ASelectICD.vsCode">
            <summary>
            在西医类型下的编码
            </summary>
        </member>
        <member name="F:ABegin.ASelectICD.vsName">
            <summary>
            在西医类型下的名称
            </summary>
        </member>
        <member name="F:ABegin.ASelectICD.vsRemark">
            <summary>
            单个诊断备注
            </summary>
        </member>
        <member name="F:ABegin.ASelectICD.vsICDType">
            <summary>
            当前为中医诊断的时候，返回对应的类型，病证或证候，以;分割
            </summary>
        </member>
        <member name="F:ABegin.ASelectICD.vsDefaultType">
            <summary>
            1:收藏，2：全部
            </summary>
        </member>
        <member name="F:ABegin.ASelectICD.vsFlRetId">
            <summary>
            操作方式
            </summary>
        </member>
        <member name="T:ABegin.ECustomValueType">
            <summary>
            ECustomValueType
            </summary>
        </member>
        <member name="T:ABegin.BarcodeType">
            <summary>
            条形码类型
            </summary>
        </member>
        <member name="T:ABegin.MessageInfo">
            <summary>
            消息信息
            </summary>
        </member>
        <member name="T:ABegin.IDMessageInfo">
            <summary>
            身份证基本信息
            </summary>
        </member>
        <member name="F:ABegin.IDMessageInfo.fsName">
            <summary>
            姓名
            </summary>
        </member>
        <member name="M:ABegin.IDMessageInfo.get_fsName">
            <summary>
            姓名
            </summary>
            <returns></returns>
        </member>
        <member name="F:ABegin.IDMessageInfo.fsSex">
            <summary>
            性别
            </summary>
        </member>
        <member name="M:ABegin.IDMessageInfo.get_fsSex">
            <summary>
            性别
            </summary>
            <returns></returns>
        </member>
        <member name="F:ABegin.IDMessageInfo.fsPeople">
            <summary>
            民族
            </summary>
        </member>
        <member name="M:ABegin.IDMessageInfo.get_fsPeople">
            <summary>
            民族
            </summary>
            <returns></returns>
        </member>
        <member name="F:ABegin.IDMessageInfo.fsBirthday">
            <summary>
            出生日期
            </summary>
        </member>
        <member name="M:ABegin.IDMessageInfo.get_fsBirthday">
            <summary>
            出生日期
            </summary>
            <returns></returns>
        </member>
        <member name="F:ABegin.IDMessageInfo.fsAddress">
            <summary>
            身份证地址
            </summary>
        </member>
        <member name="M:ABegin.IDMessageInfo.get_fsAddress">
            <summary>
            身份证地址
            </summary>
            <returns></returns>
        </member>
        <member name="F:ABegin.IDMessageInfo.fsNumber">
             <summary>
            身份证号
             </summary>
        </member>
        <member name="M:ABegin.IDMessageInfo.get_fsNumber">
            <summary>
            身份证号
            </summary>
        </member>
        <member name="F:ABegin.IDMessageInfo.fsSigndate">
            <summary>
            签发日期
            </summary>
        </member>
        <member name="F:ABegin.IDMessageInfo.fsValidtermOfStart">
            <summary>
            有效日期开始
            </summary>
        </member>
        <member name="F:ABegin.IDMessageInfo.fsValidtermOfEnd">
            <summary>
            有效日期截止
            </summary>
        </member>
        <member name="F:ABegin.IDMessageInfo.fsNumber_Address">
            <summary>
            联系地址，来源于身份证号
            </summary>
        </member>
        <member name="F:ABegin.IDMessageInfo.fsAddressElse">
            <summary>
            其他详细地址
            </summary>
        </member>
        <member name="M:ABegin.IDMessageInfo.get_fsAddressElse">
            <summary>
            身份证号
            </summary>
        </member>
        <member name="M:ABegin.IDMessageInfo.get_fsNumber_Address">
            <summary>
            详细地址编码
            </summary>
            <returns></returns>
        </member>
        <member name="F:ABegin.IDMessageInfo._fiImage">
            <summary>
            头像
            </summary>
        </member>
        <member name="F:ABegin.IDMessageInfo.fsSamid">
            <summary>
            安全编号
            </summary>
        </member>
        <member name="M:ABegin.IDMessageInfo.GetMsg">
            <summary>
            获取身份证提示信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.IDMessageInfo.Trim">
            <summary>
            去除空格，重组参数
            </summary>
        </member>
        <member name="T:ABegin.RegInfo">
            <summary>
            系统注册信息
            </summary>
        </member>
        <member name="F:ABegin.RegInfo.fs注册类型">
            <summary>
            注册类型
            </summary>
        </member>
        <member name="F:ABegin.RegInfo.list接口列表">
            <summary>
            注册接口列表
            </summary>
        </member>
        <member name="F:ABegin.RegInfo.fbFalgInit">
            <summary>
            初始化是否成功
            </summary>
        </member>
        <member name="M:ABegin.RegInfo.Init(ArrcenReg.InterFace)">
            <summary>
            初始化注册
            </summary>
            <param name="interReg">注册对象</param>
        </member>
        <member name="T:ABegin.EMsgRec">
            <summary>
            消息对象
            </summary>
        </member>
        <member name="F:ABegin.EMsgRec.User">
            <summary>
            用户
            </summary>
        </member>
        <member name="F:ABegin.EMsgRec.Client">
            <summary>
            终端
            </summary>
        </member>
        <member name="T:ABegin.APluglInfos">
            <summary>
            窗口插件集合
            </summary>
        </member>
        <member name="F:ABegin.APluglInfos.aPluglInfos">
            <summary>
            插件列表
            </summary>
        </member>
        <member name="T:ABegin.APluglInfo">
            <summary>
            窗口插件明细信息
            </summary>
        </member>
        <member name="F:ABegin.APluglInfo.fsID">
            <summary>
            插件ID
            </summary>
        </member>
        <member name="F:ABegin.APluglInfo.fsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="F:ABegin.APluglInfo.fsFormName">
            <summary>
            窗口名称
            </summary>
        </member>
        <member name="F:ABegin.APluglInfo.fsPlugl">
            <summary>
            插件路径
            </summary>
        </member>
        <member name="F:ABegin.APluglInfo.fsName">
            <summary>
            插件名称
            </summary>
        </member>
        <member name="F:ABegin.APluglInfo.fsAuthor">
            <summary>
            插件作者
            </summary>
        </member>
        <member name="F:ABegin.APluglInfo.fsDesc">
            <summary>
            插件描述
            </summary>
        </member>
        <member name="F:ABegin.APluglInfo.fsVersion">
            <summary>
            插件版本
            </summary>
        </member>
        <member name="F:ABegin.APluglInfo.fsUpdateDate">
            <summary>
            插件文件更新时间
            </summary>
        </member>
        <member name="F:ABegin.APluglInfo.fbOK">
            <summary>
            插件是否初始化成功
            </summary>
        </member>
        <member name="F:ABegin.APluglInfo.fsMessage">
            <summary>
            插件初始化失败的情况下的错误消息
            </summary>
        </member>
        <member name="T:ABegin.AUpdateSQLInfo">
            <summary>
            升级脚本SQL评审相关
            </summary>
        </member>
        <member name="F:ABegin.AUpdateSQLInfo.sSql">
            <summary>
            当前升级脚本
            </summary>
        </member>
        <member name="F:ABegin.AUpdateSQLInfo.dDate">
            <summary>
            脚本执行时间
            </summary>
        </member>
        <member name="F:ABegin.AUpdateSQLInfo.sSub">
            <summary>
            脚本所属组件
            </summary>
        </member>
        <member name="F:ABegin.AUpdateSQLInfo.sResult">
            <summary>
            评审结果
            </summary>
        </member>
        <member name="F:ABegin.AUpdateSQLInfo.sRemark">
            <summary>
            评审备注
            </summary>
        </member>
        <member name="M:ABegin.AUpdateSQLInfo.SerializeObject">
            <summary>
            序列化为json
            </summary>
            <returns></returns>
        </member>
        <member name="T:ABegin.SqlServer">
            <summary>
            本地断网收费客户端 SqlServer数据库访问管理类
            </summary>
        </member>
        <member name="F:ABegin.SqlServer.connectionString">
            <summary>
            当前数据库连接字符串
            </summary>
        </member>
        <member name="F:ABegin.SqlServer.sqlConnection">
            <summary>
            Sqlserver数据库连接对象
            </summary>
        </member>
        <member name="F:ABegin.SqlServer.tranTrue">
            <summary>
            是否在事务中
            </summary>
        </member>
        <member name="F:ABegin.SqlServer.symObj">
            <summary>
            数据库连接锁定对象
            </summary>
        </member>
        <member name="M:ABegin.SqlServer.isConnect">
            <summary>
            当前SqlServer客户端是否连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABegin.SqlServer.Init(System.String,System.String,System.String,System.String)">
            <summary>
            获取Sqlserver数据库连接对象
            </summary>
            <param name="server">服务器地址</param>
            <param name="uid">用户名</param>
            <param name="pwd">密码</param>
            <param name="dataBase">当前连接的数据库</param>
            <returns>连接成功后的数据库连接对象</returns>
        </member>
        <member name="M:ABegin.SqlServer.CloseSqlServerConnection">
            <summary>
            关闭Sqlserver数据库连接对象
            </summary>
        </member>
        <member name="M:ABegin.SqlServer.OpenSqlServerConnection">
            <summary>
            打开Sqlserver数据库连接对象
            </summary>
        </member>
        <member name="M:ABegin.SqlServer.getDataTable(System.String)">
            <summary>
            根据Sql查询，返回查询的结果集Table
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.SqlServer.GetRecordSet(System.String)">
            <summary>
            获取ARecordset数据集
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.SqlServer.getDataSet(System.String)">
            <summary>
            根据Sql查询，返回查询的结果集Table
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.SqlServer.ExecSql(System.String)">
            <summary>
            执行一条Sql语句，返回影响的行数
            </summary>
            <param name="sql">当前要执行的sql语句</param>
            <returns>当前执行影响的行数</returns>
        </member>
        <member name="M:ABegin.SqlServer.getSingle(System.String)">
            <summary>
            根据当前查询的sql返回单个值
            </summary>
            <param name="sql">当前要查询的sql语句</param>
            <returns>查询到的返回结果：可为null，先判断再toString()</returns>
        </member>
        <member name="M:ABegin.SqlServer.ExecProc(System.String,ANetAccess.TSQLPara)">
            <summary>
            执行SqlServer存储过程
            </summary>
            <param name="vsName"></param>
            <param name="tPara"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.SqlServer.BeginTran">
            <summary>
            开始事务
            </summary>
        </member>
        <member name="M:ABegin.SqlServer.RollbackTran">
            <summary>
            回滚
            </summary>
        </member>
        <member name="M:ABegin.SqlServer.CloseConnection">
            <summary>
            异常的时候：关闭连接
            </summary>
        </member>
        <member name="T:ABegin.AAdministrative">
            <summary>
            行政区划管理
            </summary>
        </member>
        <member name="F:ABegin.AAdministrative.list省">
            <summary>
            ACity为省信息
            </summary>
        </member>
        <member name="F:ABegin.AAdministrative.list市">
            <summary>
            ACity为市信息
            </summary>
        </member>
        <member name="F:ABegin.AAdministrative.list县">
            <summary>
            ACity为县信息
            </summary>
        </member>
        <member name="F:ABegin.AAdministrative.list乡镇">
            <summary>
            ACity为乡信息
            </summary>
        </member>
        <member name="M:ABegin.AAdministrative._获取县区名称(System.String)">
            <summary>
            根据区县编码获取区县名称
            </summary>
            <param name="vsNum"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.AAdministrative._获取市县名称(System.String)">
            <summary>
            根据市区编码获取市区名称
            </summary>
            <param name="vsNum"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.AAdministrative.Do模糊匹配(System.String,System.String@)">
            <summary>
            根据身份证号详细地址，识别所在行政区划编码 平台内部身份证解析使用
            </summary>
            <param name="vsAddress">详细地址信息</param>
            <param name="vsElse"></param>
            <returns></returns>
        </member>
        <member name="M:ABegin.AAdministrative.Get明细地址(System.String,System.String,System.String@,System.String@,System.String@)">
            <summary>
            根据区划获取详细信息
            </summary>
            <param name="vs类型"></param>
            <param name="vs区划编码"></param>
            <param name="vs编码"></param>
            <param name="vs名称"></param>
            <param name="vs邮政编码"></param>
        </member>
        <member name="M:ABegin.AAdministrative.Get行政区划(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="vs类型">1省，2市，3县，4乡</param>
            <param name="vs父编码">上级编码</param>
            <param name="vsKey">关键字过滤</param>
            <returns></returns>
        </member>
        <member name="M:ABegin.AAdministrative.Init">
            <summary>
            初始化行政区划数据
            </summary>
        </member>
        <member name="M:ABegin.AAdministrative._Init">
            <summary>
            初始化行政区划信息
            </summary>
        </member>
        <member name="T:ABegin.ACity">
            <summary>
            行政单位详细信息,如市
            </summary>
        </member>
        <member name="F:ABegin.ACity.fs编码">
            <summary>
            行政区划编码
            </summary>
        </member>
        <member name="F:ABegin.ACity.fs名称">
            <summary>
            行政区划名称
            </summary>
        </member>
        <member name="F:ABegin.ACity.fs简码">
            <summary>
            行政区划简码
            </summary>
        </member>
        <member name="F:ABegin.ACity.fs邮政编码">
            <summary>
            邮政编码
            </summary>
        </member>
        <member name="F:ABegin.ACity.fi长度">
            <summary>
            名称长度
            </summary>
        </member>
    </members>
</doc>
@#@2018-12-25 10:14:13